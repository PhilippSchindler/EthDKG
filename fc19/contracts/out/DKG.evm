    /* "DKG.sol":26:22755  contract DKG {... */
  mstore(0x40, 0x80)
    /* "DKG.sol":2455:2756  constructor() public {... */
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x0
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "DKG.sol":2455:2756  constructor() public {... */
  pop
    /* "DKG.sol":2508:2520  block.number */
  number
    /* "DKG.sol":2486:2505  T_CONTRACT_CREATION */
  0x7
    /* "DKG.sol":2486:2520  T_CONTRACT_CREATION = block.number */
  dup2
  swap1
  sstore
  pop
    /* "DKG.sol":1352:1354  10 */
  0xa
    /* "DKG.sol":1400:1401  2 */
  0x2
    /* "DKG.sol":2551:2570  T_CONTRACT_CREATION */
  sload(0x7)
    /* "DKG.sol":2551:2586  T_CONTRACT_CREATION + DELTA_CONFIRM */
  add
    /* "DKG.sol":2551:2602  T_CONTRACT_CREATION + DELTA_CONFIRM + DELTA_INCLUDE */
  add
    /* "DKG.sol":2530:2548  T_REGISTRATION_END */
  0x8
    /* "DKG.sol":2530:2602  T_REGISTRATION_END = T_CONTRACT_CREATION + DELTA_CONFIRM + DELTA_INCLUDE */
  dup2
  swap1
  sstore
  pop
    /* "DKG.sol":1352:1354  10 */
  0xa
    /* "DKG.sol":1400:1401  2 */
  0x2
    /* "DKG.sol":2628:2646  T_REGISTRATION_END */
  sload(0x8)
    /* "DKG.sol":2628:2662  T_REGISTRATION_END + DELTA_CONFIRM */
  add
    /* "DKG.sol":2628:2678  T_REGISTRATION_END + DELTA_CONFIRM + DELTA_INCLUDE */
  add
    /* "DKG.sol":2612:2625  T_SHARING_END */
  0x9
    /* "DKG.sol":2612:2678  T_SHARING_END = T_REGISTRATION_END + DELTA_CONFIRM + DELTA_INCLUDE */
  dup2
  swap1
  sstore
  pop
    /* "DKG.sol":1352:1354  10 */
  0xa
    /* "DKG.sol":1400:1401  2 */
  0x2
    /* "DKG.sol":2704:2717  T_SHARING_END */
  sload(0x9)
    /* "DKG.sol":2704:2733  T_SHARING_END + DELTA_CONFIRM */
  add
    /* "DKG.sol":2704:2749  T_SHARING_END + DELTA_CONFIRM + DELTA_INCLUDE */
  add
    /* "DKG.sol":2688:2701  T_DISPUTE_END */
  0xa
    /* "DKG.sol":2688:2749  T_DISPUTE_END = T_SHARING_END + DELTA_CONFIRM + DELTA_INCLUDE */
  dup2
  swap1
  sstore
  pop
    /* "DKG.sol":26:22755  contract DKG {... */
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x0
  codecopy
  0x0
  return
stop

sub_0: assembly {
        /* "DKG.sol":26:22755  contract DKG {... */
      mstore(0x40, 0x80)
      jumpi(tag_1, lt(calldatasize, 0x4))
      calldataload(0x0)
      0x100000000000000000000000000000000000000000000000000000000
      swap1
      div
      0xffffffff
      and
      dup1
      0x4649712
      eq
      tag_2
      jumpi
      dup1
      0x6bd598e
      eq
      tag_3
      jumpi
      dup1
      0xde1553f
      eq
      tag_4
      jumpi
      dup1
      0xf21e5d8
      eq
      tag_5
      jumpi
      dup1
      0xf3b0050
      eq
      tag_6
      jumpi
      dup1
      0xfd7410c
      eq
      tag_7
      jumpi
      dup1
      0x1b177dbd
      eq
      tag_8
      jumpi
      dup1
      0x29457483
      eq
      tag_9
      jumpi
      dup1
      0x2d6b113a
      eq
      tag_10
      jumpi
      dup1
      0x35a063b4
      eq
      tag_11
      jumpi
      dup1
      0x3b89332e
      eq
      tag_12
      jumpi
      dup1
      0x628ee84f
      eq
      tag_13
      jumpi
      dup1
      0x656b9c87
      eq
      tag_14
      jumpi
      dup1
      0x708d9fd3
      eq
      tag_15
      jumpi
      dup1
      0x742689c0
      eq
      tag_16
      jumpi
      dup1
      0x7543b80f
      eq
      tag_17
      jumpi
      dup1
      0x7753ec49
      eq
      tag_18
      jumpi
      dup1
      0x7e837ccc
      eq
      tag_19
      jumpi
      dup1
      0x80b62b70
      eq
      tag_20
      jumpi
      dup1
      0x82688f14
      eq
      tag_21
      jumpi
      dup1
      0x829f0667
      eq
      tag_22
      jumpi
      dup1
      0x9da26320
      eq
      tag_23
      jumpi
      dup1
      0x9fc52bd4
      eq
      tag_24
      jumpi
      dup1
      0xadd3fa39
      eq
      tag_25
      jumpi
      dup1
      0xb87cbafc
      eq
      tag_26
      jumpi
      dup1
      0xb94fdaab
      eq
      tag_27
      jumpi
      dup1
      0xba59a75e
      eq
      tag_28
      jumpi
      dup1
      0xd3cf6186
      eq
      tag_29
      jumpi
      dup1
      0xe3407276
      eq
      tag_30
      jumpi
      dup1
      0xe664725b
      eq
      tag_31
      jumpi
      dup1
      0xeed6548c
      eq
      tag_32
      jumpi
      dup1
      0xf4d7d33d
      eq
      tag_33
      jumpi
    tag_1:
      0x0
      dup1
      revert
        /* "DKG.sol":5693:6741  function share_key(... */
    tag_2:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_34
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_34:
        /* "DKG.sol":5693:6741  function share_key(... */
      pop
      tag_35
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_36)
    tag_35:
      stop
        /* "DKG.sol":1862:1890  uint256 public T_SHARING_END */
    tag_3:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_37
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_37:
        /* "DKG.sol":1862:1890  uint256 public T_SHARING_END */
      pop
      tag_38
      jump(tag_39)
    tag_38:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1753:1786  uint256 public T_REGISTRATION_END */
    tag_4:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_40
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_40:
        /* "DKG.sol":1753:1786  uint256 public T_REGISTRATION_END */
      pop
      tag_41
      jump(tag_42)
    tag_41:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1312:1354  uint256 public constant DELTA_INCLUDE = 10 */
    tag_5:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_43
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_43:
        /* "DKG.sol":1312:1354  uint256 public constant DELTA_INCLUDE = 10 */
      pop
      tag_44
      jump(tag_45)
    tag_44:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":8181:11104  function dispute_share(... */
    tag_6:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_46
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_46:
        /* "DKG.sol":8181:11104  function dispute_share(... */
      pop
      tag_47
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_48)
    tag_47:
      stop
        /* "DKG.sol":3203:3349  function in_finalization_phase()... */
    tag_7:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_49
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_49:
        /* "DKG.sol":3203:3349  function in_finalization_phase()... */
      pop
      tag_50
      jump(tag_51)
    tag_50:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1407:1458  uint256 public constant PARTICIPATION_THRESHOLD = 3 */
    tag_8:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_52
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_52:
        /* "DKG.sol":1407:1458  uint256 public constant PARTICIPATION_THRESHOLD = 3 */
      pop
      tag_53
      jump(tag_54)
    tag_53:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":3942:5687  function register(uint256[2] pk, uint256[4] bls_pk, uint256[2] sk_knowledge_proof) ... */
    tag_9:
      tag_55
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x80
      add
      swap1
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x4)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_56)
    tag_55:
      stop
        /* "DKG.sol":2890:3043  function in_sharing_phase() ... */
    tag_10:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_57
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_57:
        /* "DKG.sol":2890:3043  function in_sharing_phase() ... */
      pop
      tag_58
      jump(tag_59)
    tag_58:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":13623:15017  function abort() ... */
    tag_11:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_60
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_60:
        /* "DKG.sol":13623:15017  function abort() ... */
      pop
      tag_61
      jump(tag_62)
    tag_61:
      stop
        /* "DKG.sol":17150:17770  function verify_signature(uint256[4] bls_pk, bytes32 message, uint256[2] signature) ... */
    tag_12:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_63
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_63:
        /* "DKG.sol":17150:17770  function verify_signature(uint256[4] bls_pk, bytes32 message, uint256[2] signature) ... */
      pop
      tag_64
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x80
      add
      swap1
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x4)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      calldataload
      not(0x0)
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_65)
    tag_64:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":3049:3197  function in_dispute_phase() ... */
    tag_13:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_66
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_66:
        /* "DKG.sol":3049:3197  function in_dispute_phase() ... */
      pop
      tag_67
      jump(tag_68)
    tag_67:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":6747:8175  function dispute_public_coefficient(... */
    tag_14:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_69
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_69:
        /* "DKG.sol":6747:8175  function dispute_public_coefficient(... */
      pop
      tag_70
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup3
      add
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      dup1
      dup1
      0x20
      mul
      0x20
      add
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap4
      swap3
      swap2
      swap1
      dup2
      dup2
      mstore
      0x20
      add
      dup4
      dup4
      0x20
      mul
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      jump(tag_71)
    tag_70:
      stop
        /* "DKG.sol":3769:3935  function group_key_confirmed()... */
    tag_15:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_72
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_72:
        /* "DKG.sol":3769:3935  function group_key_confirmed()... */
      pop
      tag_73
      jump(tag_74)
    tag_73:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":2075:2108  uint256 public T_GROUP_KEY_UPLOAD */
    tag_16:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_75
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_75:
        /* "DKG.sol":2075:2108  uint256 public T_GROUP_KEY_UPLOAD */
      pop
      tag_76
      jump(tag_77)
    tag_76:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1360:1401  uint256 public constant DELTA_CONFIRM = 2 */
    tag_17:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_78
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_78:
        /* "DKG.sol":1360:1401  uint256 public constant DELTA_CONFIRM = 2 */
      pop
      tag_79
      jump(tag_80)
    tag_79:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":2762:2884  function in_registration_phase() ... */
    tag_18:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_81
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_81:
        /* "DKG.sol":2762:2884  function in_registration_phase() ... */
      pop
      tag_82
      jump(tag_83)
    tag_82:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":3635:3763  function dispute_confirmed()... */
    tag_19:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_84
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_84:
        /* "DKG.sol":3635:3763  function dispute_confirmed()... */
      pop
      tag_85
      jump(tag_86)
    tag_85:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1279:1298  bool public aborted */
    tag_20:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_87
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_87:
        /* "DKG.sol":1279:1298  bool public aborted */
      pop
      tag_88
      jump(tag_89)
    tag_88:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":18558:19340  function bn128_multiply(uint256[3] input) ... */
    tag_21:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_90
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_90:
        /* "DKG.sol":18558:19340  function bn128_multiply(uint256[3] input) ... */
      pop
      tag_91
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x60
      add
      swap1
      0x3
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x3)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_92)
    tag_91:
      mload(0x40)
      dup1
      dup3
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_93:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_94
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_93)
    tag_94:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":18558:19340  function bn128_multiply(uint256[3] input) ... */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":15374:15874  function verify_sk_knowledge(uint[2] public_key, uint[2] proof) ... */
    tag_22:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_96
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_96:
        /* "DKG.sol":15374:15874  function verify_sk_knowledge(uint[2] public_key, uint[2] proof) ... */
      pop
      tag_97
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_98)
    tag_97:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":3355:3495  function registrations_confirmed() ... */
    tag_23:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_99
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_99:
        /* "DKG.sol":3355:3495  function registrations_confirmed() ... */
      pop
      tag_100
      jump(tag_101)
    tag_100:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":15978:17144  function verify_decryption_key(... */
    tag_24:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_102
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_102:
        /* "DKG.sol":15978:17144  function verify_decryption_key(... */
      pop
      tag_103
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_104)
    tag_103:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":3501:3629  function sharing_confirmed()... */
    tag_25:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_105
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_105:
        /* "DKG.sol":3501:3629  function sharing_confirmed()... */
      pop
      tag_106
      jump(tag_107)
    tag_106:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":20026:20662  function bn128_check_pairing(uint256[12] input) ... */
    tag_26:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_108
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_108:
        /* "DKG.sol":20026:20662  function bn128_check_pairing(uint256[12] input) ... */
      pop
      tag_109
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x180
      add
      swap1
      0xc
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0xc)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_110)
    tag_109:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":11369:13388  function upload_group_key(uint[4] _bls_group_pk) ... */
    tag_27:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_111
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_111:
        /* "DKG.sol":11369:13388  function upload_group_key(uint[4] _bls_group_pk) ... */
      pop
      tag_112
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x80
      add
      swap1
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x4)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_113)
    tag_112:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":20669:21756  function bn128_map_to_G1(bytes32 data)... */
    tag_28:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_114
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_114:
        /* "DKG.sol":20669:21756  function bn128_map_to_G1(bytes32 data)... */
      pop
      tag_115
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      not(0x0)
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      jump(tag_116)
    tag_115:
      mload(0x40)
      dup1
      dup3
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_117:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_118
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_117)
    tag_118:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":20669:21756  function bn128_map_to_G1(bytes32 data)... */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1970:1998  uint256 public T_DISPUTE_END */
    tag_29:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_120
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_120:
        /* "DKG.sol":1970:1998  uint256 public T_DISPUTE_END */
      pop
      tag_121
      jump(tag_122)
    tag_121:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":21767:22752  function bigModExp(uint256[6] input) ... */
    tag_30:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_123
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_123:
        /* "DKG.sol":21767:22752  function bigModExp(uint256[6] input) ... */
      pop
      tag_124
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0xc0
      add
      swap1
      0x6
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x6)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_125)
    tag_124:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":17780:18552  function bn128_add(uint256[4] input) ... */
    tag_31:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_126
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_126:
        /* "DKG.sol":17780:18552  function bn128_add(uint256[4] input) ... */
      pop
      tag_127
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x80
      add
      swap1
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x4)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_128)
    tag_127:
      mload(0x40)
      dup1
      dup3
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_129:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_130
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_129)
    tag_130:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":17780:18552  function bn128_add(uint256[4] input) ... */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":1650:1684  uint256 public T_CONTRACT_CREATION */
    tag_32:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_132
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_132:
        /* "DKG.sol":1650:1684  uint256 public T_CONTRACT_CREATION */
      pop
      tag_133
      jump(tag_134)
    tag_133:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":19346:20020  function bn128_is_on_curve(uint[2] point) ... */
    tag_33:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_135
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_135:
        /* "DKG.sol":19346:20020  function bn128_is_on_curve(uint[2] point) ... */
      pop
      tag_136
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      0x40
      add
      swap1
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      mul(0x20, 0x2)
      dup1
      dup3
      dup5
      calldatacopy
      dup3
      add
      swap2
      pop
      pop
      pop
      pop
      pop
      swap2
      swap3
      swap2
      swap3
      swap1
      pop
      pop
      pop
      jump(tag_137)
    tag_136:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "DKG.sol":5693:6741  function share_key(... */
    tag_36:
        /* "DKG.sol":5868:5877  uint256 n */
      0x0
        /* "DKG.sol":5917:5926  uint256 t */
      dup1
        /* "DKG.sol":5950:5967  uint256 issuer_id */
      0x0
        /* "DKG.sol":5880:5900  registered_addresses */
      0x4
        /* "DKG.sol":5880:5907  registered_addresses.length */
      dup1
      sload
      swap1
      pop
        /* "DKG.sol":5868:5907  uint256 n = registered_addresses.length */
      swap3
      pop
        /* "DKG.sol":5939:5940  1 */
      0x1
        /* "DKG.sol":5934:5935  2 */
      0x2
        /* "DKG.sol":5930:5931  n */
      dup5
        /* "DKG.sol":5930:5935  n / 2 */
      dup2
      iszero
      iszero
      tag_139
      jumpi
      invalid
    tag_139:
      div
        /* "DKG.sol":5929:5940  (n / 2) + 1 */
      add
        /* "DKG.sol":5917:5940  uint256 t = (n / 2) + 1 */
      swap2
      pop
        /* "DKG.sol":5970:5975  nodes */
      0x5
        /* "DKG.sol":5970:5987  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5976:5986  msg.sender */
      caller
        /* "DKG.sol":5970:5987  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5970:5990  nodes[msg.sender].id */
      0x0
      add
      sload
        /* "DKG.sol":5950:5990  uint256 issuer_id = nodes[msg.sender].id */
      swap1
      pop
        /* "DKG.sol":6009:6027  in_sharing_phase() */
      tag_140
        /* "DKG.sol":6009:6025  in_sharing_phase */
      tag_59
        /* "DKG.sol":6009:6027  in_sharing_phase() */
      jump	// in
    tag_140:
        /* "DKG.sol":6001:6085  require(in_sharing_phase(), "key sharing failed (contract is not in sharing phase)") */
      iszero
      iszero
      tag_141
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x35
      dup2
      mstore
      0x20
      add
      dup1
      0x6b65792073686172696e67206661696c65642028636f6e747261637420697320
      dup2
      mstore
      0x20
      add
      0x6e6f7420696e2073686172696e67207068617365290000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_141:
        /* "DKG.sol":6115:6116  0 */
      0x0
        /* "DKG.sol":6103:6112  issuer_id */
      dup2
        /* "DKG.sol":6103:6116  issuer_id > 0 */
      gt
        /* "DKG.sol":6095:6177  require(issuer_id > 0, "key sharing failed (ethereum account has not registered)") */
      iszero
      iszero
      tag_142
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x38
      dup2
      mstore
      0x20
      add
      dup1
      0x6b65792073686172696e67206661696c65642028657468657265756d20616363
      dup2
      mstore
      0x20
      add
      0x6f756e7420686173206e6f742072656769737465726564290000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_142:
        /* "DKG.sol":6226:6227  1 */
      0x1
        /* "DKG.sol":6222:6223  n */
      dup4
        /* "DKG.sol":6222:6227  n - 1 */
      sub
        /* "DKG.sol":6195:6211  encrypted_shares */
      dup6
        /* "DKG.sol":6195:6218  encrypted_shares.length */
      mload
        /* "DKG.sol":6195:6227  encrypted_shares.length == n - 1 */
      eq
        /* "DKG.sol":6187:6296  require(encrypted_shares.length == n - 1, "key sharing failed (invalid number of encrypted shares provided)") */
      iszero
      iszero
      tag_143
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x40
      dup2
      mstore
      0x20
      add
      dup1
      0x6b65792073686172696e67206661696c65642028696e76616c6964206e756d62
      dup2
      mstore
      0x20
      add
      0x6572206f6620656e63727970746564207368617265732070726f766964656429
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_143:
        /* "DKG.sol":6352:6353  2 */
      0x2
        /* "DKG.sol":6348:6349  2 */
      dup1
        /* "DKG.sol":6344:6345  t */
      dup4
        /* "DKG.sol":6344:6349  t * 2 */
      mul
        /* "DKG.sol":6344:6353  t * 2 - 2 */
      sub
        /* "DKG.sol":6314:6333  public_coefficients */
      dup5
        /* "DKG.sol":6314:6340  public_coefficients.length */
      mload
        /* "DKG.sol":6314:6353  public_coefficients.length == t * 2 - 2 */
      eq
        /* "DKG.sol":6306:6417  require(public_coefficients.length == t * 2 - 2, "key sharing failed (invalid number of commitments provided)") */
      iszero
      iszero
      tag_144
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3b
      dup2
      mstore
      0x20
      add
      dup1
      0x6b65792073686172696e67206661696c65642028696e76616c6964206e756d62
      dup2
      mstore
      0x20
      add
      0x6572206f6620636f6d6d69746d656e74732070726f7669646564290000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_144:
        /* "DKG.sol":6620:6636  encrypted_shares */
      dup5
        /* "DKG.sol":6638:6657  public_coefficients */
      dup5
        /* "DKG.sol":6603:6658  abi.encodePacked(encrypted_shares, public_coefficients) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_145:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_146
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_145)
    tag_146:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":6603:6658  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_148:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_149
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_148)
    tag_149:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":6603:6658  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":6603:6658  abi.encodePacked(encrypted_shares, public_coefficients) */
      swap1
      0x40
      mstore
        /* "DKG.sol":6593:6659  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_151:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_152
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_151)
    tag_152:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":6593:6659  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":6551:6556  nodes */
      0x5
        /* "DKG.sol":6551:6568  nodes[msg.sender] */
      0x0
        /* "DKG.sol":6557:6567  msg.sender */
      caller
        /* "DKG.sol":6551:6568  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":6551:6590  nodes[msg.sender].key_distribution_hash */
      0x8
      add
        /* "DKG.sol":6551:6659  nodes[msg.sender].key_distribution_hash = keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      dup2
      not(0x0)
      and
      swap1
      sstore
      pop
        /* "DKG.sol":6674:6734  KeySharing(issuer_id, encrypted_shares, public_coefficients) */
      0xd3d84113c75efd125afbcf8c5d0ea6cc3f239f23f9ad5521831ec6353fbb34a0
        /* "DKG.sol":6685:6694  issuer_id */
      dup2
        /* "DKG.sol":6696:6712  encrypted_shares */
      dup7
        /* "DKG.sol":6714:6733  public_coefficients */
      dup7
        /* "DKG.sol":6674:6734  KeySharing(issuer_id, encrypted_shares, public_coefficients) */
      mload(0x40)
      dup1
      dup5
      dup2
      mstore
      0x20
      add
      dup1
      0x20
      add
      dup1
      0x20
      add
      dup4
      dup2
      sub
      dup4
      mstore
      dup6
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_154:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_155
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_154)
    tag_155:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":6674:6734  KeySharing(issuer_id, encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup4
      dup2
      sub
      dup3
      mstore
      dup5
      dup2
      dup2
      mload
      dup2
      mstore
      0x20
      add
      swap2
      pop
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_157:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_158
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_157)
    tag_158:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":6674:6734  KeySharing(issuer_id, encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "DKG.sol":5693:6741  function share_key(... */
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":1862:1890  uint256 public T_SHARING_END */
    tag_39:
      sload(0x9)
      dup2
      jump	// out
        /* "DKG.sol":1753:1786  uint256 public T_REGISTRATION_END */
    tag_42:
      sload(0x8)
      dup2
      jump	// out
        /* "DKG.sol":1312:1354  uint256 public constant DELTA_INCLUDE = 10 */
    tag_45:
        /* "DKG.sol":1352:1354  10 */
      0xa
        /* "DKG.sol":1312:1354  uint256 public constant DELTA_INCLUDE = 10 */
      dup2
      jump	// out
        /* "DKG.sol":8181:11104  function dispute_share(... */
    tag_48:
        /* "DKG.sol":8696:8715  Node storage issuer */
      0x0
        /* "DKG.sol":8746:8767  Node storage verifier */
      dup1
        /* "DKG.sol":9818:9827  uint256 i */
      0x0
        /* "DKG.sol":9998:10011  uint256 share */
      dup1
        /* "DKG.sol":10275:10284  uint256 x */
      0x0
        /* "DKG.sol":10298:10318  uint256[2] memory Fx */
      tag_160
      jump	// in(tag_161)
    tag_160:
        /* "DKG.sol":10361:10382  uint256[2] memory tmp */
      tag_162
      jump	// in(tag_161)
    tag_162:
        /* "DKG.sol":10524:10533  uint256 j */
      0x0
        /* "DKG.sol":10854:10874  uint256[2] memory Fi */
      tag_163
      jump	// in(tag_161)
    tag_163:
        /* "DKG.sol":8718:8723  nodes */
      0x5
        /* "DKG.sol":8718:8736  nodes[issuer_addr] */
      0x0
        /* "DKG.sol":8724:8735  issuer_addr */
      dup16
        /* "DKG.sol":8718:8736  nodes[issuer_addr] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":8696:8736  Node storage issuer = nodes[issuer_addr] */
      swap9
      pop
        /* "DKG.sol":8770:8775  nodes */
      0x5
        /* "DKG.sol":8770:8787  nodes[msg.sender] */
      0x0
        /* "DKG.sol":8776:8786  msg.sender */
      caller
        /* "DKG.sol":8770:8787  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":8746:8787  Node storage verifier = nodes[msg.sender] */
      swap8
      pop
        /* "DKG.sol":8806:8824  in_dispute_phase() */
      tag_165
        /* "DKG.sol":8806:8822  in_dispute_phase */
      tag_68
        /* "DKG.sol":8806:8824  in_dispute_phase() */
      jump	// in
    tag_165:
        /* "DKG.sol":8798:8878  require(in_dispute_phase(), "dispute failed (contract is not in sharing phase)") */
      iszero
      iszero
      tag_166
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x31
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028636f6e7472616374206973206e6f7420
      dup2
      mstore
      0x20
      add
      0x696e2073686172696e6720706861736529000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_166:
        /* "DKG.sol":8908:8909  0 */
      0x0
        /* "DKG.sol":8896:8902  issuer */
      dup10
        /* "DKG.sol":8896:8905  issuer.id */
      0x0
      add
      sload
        /* "DKG.sol":8896:8909  issuer.id > 0 */
      gt
        /* "DKG.sol":8888:8971  require(issuer.id > 0, "dispute failed/aborted (issuer not registered or slashed)") */
      iszero
      iszero
      tag_167
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x39
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642f61626f727465642028697373756572206e
      dup2
      mstore
      0x20
      add
      0x6f742072656769737465726564206f7220736c61736865642900000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_167:
        /* "DKG.sol":9003:9004  0 */
      0x0
        /* "DKG.sol":8989:8997  verifier */
      dup9
        /* "DKG.sol":8989:9000  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":8989:9004  verifier.id > 0 */
      gt
        /* "DKG.sol":8981:9068  require(verifier.id > 0, "dispute failed/aborted (verifier not registered or slashed)") */
      iszero
      iszero
      tag_168
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3b
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642f61626f7274656420287665726966696572
      dup2
      mstore
      0x20
      add
      0x206e6f742072656769737465726564206f7220736c6173686564290000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_168:
        /* "DKG.sol":9099:9107  verifier */
      dup8
        /* "DKG.sol":9099:9110  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":9086:9092  issuer */
      dup10
        /* "DKG.sol":9086:9095  issuer.id */
      0x0
      add
      sload
        /* "DKG.sol":9086:9110  issuer.id != verifier.id */
      eq
      iszero
        /* "DKG.sol":9078:9159  require(issuer.id != verifier.id, "dispute failed (self dispute is not allowed)") */
      iszero
      iszero
      tag_169
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x2c
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c6564202873656c66206469737075746520697320
      dup2
      mstore
      0x20
      add
      0x6e6f7420616c6c6f776564290000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_169:
        /* "DKG.sol":9249:9265  encrypted_shares */
      dup13
        /* "DKG.sol":9267:9286  public_coefficients */
      dup13
        /* "DKG.sol":9232:9287  abi.encodePacked(encrypted_shares, public_coefficients) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_170:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_171
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_170)
    tag_171:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":9232:9287  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_173:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_174
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_173)
    tag_174:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":9232:9287  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":9232:9287  abi.encodePacked(encrypted_shares, public_coefficients) */
      swap1
      0x40
      mstore
        /* "DKG.sol":9222:9288  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_176:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_177
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_176)
    tag_177:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":9222:9288  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":9190:9288  issuer.key_distribution_hash == keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      not(0x0)
      and
        /* "DKG.sol":9190:9196  issuer */
      dup10
        /* "DKG.sol":9190:9218  issuer.key_distribution_hash */
      0x8
      add
      sload
        /* "DKG.sol":9190:9288  issuer.key_distribution_hash == keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      not(0x0)
      and
      eq
        /* "DKG.sol":9169:9387  require(... */
      iszero
      iszero
      tag_179
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x49
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028656e6372797074656420736861726573
      dup2
      mstore
      0x20
      add
      0x20616e642f6f72207075626c696320636f656666696369656e7473206e6f7420
      dup2
      mstore
      0x20
      add
      0x6d61746368696e67290000000000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_179:
        /* "DKG.sol":9418:9501  verify_decryption_key(decryption_key, decryption_key_proof, verifier.pk, issuer.pk) */
      tag_180
        /* "DKG.sol":9440:9454  decryption_key */
      dup12
        /* "DKG.sol":9456:9476  decryption_key_proof */
      dup12
        /* "DKG.sol":9478:9486  verifier */
      dup11
        /* "DKG.sol":9478:9489  verifier.pk */
      0x2
      add
        /* "DKG.sol":9418:9501  verify_decryption_key(decryption_key, decryption_key_proof, verifier.pk, issuer.pk) */
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x2
      dup1
      iszero
      tag_181
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_182:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_182
      jumpi
    tag_181:
      pop
      pop
      pop
      pop
      pop
        /* "DKG.sol":9491:9497  issuer */
      dup13
        /* "DKG.sol":9491:9500  issuer.pk */
      0x2
      add
        /* "DKG.sol":9418:9501  verify_decryption_key(decryption_key, decryption_key_proof, verifier.pk, issuer.pk) */
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x2
      dup1
      iszero
      tag_183
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_184:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_184
      jumpi
    tag_183:
      pop
      pop
      pop
      pop
      pop
        /* "DKG.sol":9418:9439  verify_decryption_key */
      tag_104
        /* "DKG.sol":9418:9501  verify_decryption_key(decryption_key, decryption_key_proof, verifier.pk, issuer.pk) */
      jump	// in
    tag_180:
        /* "DKG.sol":9397:9590  require(... */
      iszero
      iszero
      tag_185
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3f
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028696e76616c6964206465637279707469
      dup2
      mstore
      0x20
      add
      0x6f6e206b6579206f722064656372797074696f6e206b65792070726f6f662900
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_185:
        /* "DKG.sol":9830:9838  verifier */
      dup8
        /* "DKG.sol":9830:9841  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":9818:9841  uint256 i = verifier.id */
      swap7
      pop
        /* "DKG.sol":9859:9865  issuer */
      dup9
        /* "DKG.sol":9859:9868  issuer.id */
      0x0
      add
      sload
        /* "DKG.sol":9855:9856  i */
      dup8
        /* "DKG.sol":9855:9868  i > issuer.id */
      gt
        /* "DKG.sol":9851:9898  if (i > issuer.id) {... */
      iszero
      tag_186
      jumpi
        /* "DKG.sol":9884:9887  i-- */
      dup7
      dup1
      0x1
      swap1
      sub
      swap8
      pop
      pop
        /* "DKG.sol":9851:9898  if (i > issuer.id) {... */
    tag_186:
        /* "DKG.sol":10075:10089  decryption_key */
      dup11
        /* "DKG.sol":10090:10091  0 */
      0x0
        /* "DKG.sol":10075:10092  decryption_key[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_187
      jumpi
      invalid
    tag_187:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10094:10102  verifier */
      dup9
        /* "DKG.sol":10094:10105  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":10058:10106  abi.encodePacked(decryption_key[0], verifier.id) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":10058:10106  abi.encodePacked(decryption_key[0], verifier.id) */
      swap1
      0x40
      mstore
        /* "DKG.sol":10048:10107  keccak256(abi.encodePacked(decryption_key[0], verifier.id)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_188:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_189
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_188)
    tag_189:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":10048:10107  keccak256(abi.encodePacked(decryption_key[0], verifier.id)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":10040:10108  uint256(keccak256(abi.encodePacked(decryption_key[0], verifier.id))) */
      0x1
      swap1
      div
        /* "DKG.sol":10014:10030  encrypted_shares */
      dup14
        /* "DKG.sol":10035:10036  1 */
      0x1
        /* "DKG.sol":10031:10032  i */
      dup10
        /* "DKG.sol":10031:10036  i - 1 */
      sub
        /* "DKG.sol":10014:10037  encrypted_shares[i - 1] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_191
      jumpi
      invalid
    tag_191:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":10014:10108  encrypted_shares[i - 1] ^ uint256(keccak256(abi.encodePacked(decryption_key[0], verifier.id))) */
      xor
        /* "DKG.sol":9998:10108  uint256 share = encrypted_shares[i - 1] ^ uint256(keccak256(abi.encodePacked(decryption_key[0], verifier.id))) */
      swap6
      pop
        /* "DKG.sol":10287:10288  i */
      dup7
        /* "DKG.sol":10275:10288  uint256 x = i */
      swap5
      pop
        /* "DKG.sol":10298:10351  uint256[2] memory Fx = [ issuer.pk[0], issuer.pk[1] ] */
      0x40
      dup1
      mload
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":10323:10329  issuer */
      dup11
        /* "DKG.sol":10323:10332  issuer.pk */
      0x2
      add
        /* "DKG.sol":10333:10334  0 */
      0x0
        /* "DKG.sol":10323:10335  issuer.pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_192
      jumpi
      invalid
    tag_192:
      add
      sload
        /* "DKG.sol":10298:10351  uint256[2] memory Fx = [ issuer.pk[0], issuer.pk[1] ] */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10337:10343  issuer */
      dup11
        /* "DKG.sol":10337:10346  issuer.pk */
      0x2
      add
        /* "DKG.sol":10347:10348  1 */
      0x1
        /* "DKG.sol":10337:10349  issuer.pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_194
      jumpi
      invalid
    tag_194:
      add
      sload
        /* "DKG.sol":10298:10351  uint256[2] memory Fx = [ issuer.pk[0], issuer.pk[1] ] */
      dup2
      mstore
      pop
      swap4
      pop
        /* "DKG.sol":10385:10452  bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      tag_196
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":10401:10420  public_coefficients */
      dup15
        /* "DKG.sol":10421:10422  0 */
      0x0
        /* "DKG.sol":10401:10423  public_coefficients[0] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_197
      jumpi
      invalid
    tag_197:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":10385:10452  bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10425:10444  public_coefficients */
      dup15
        /* "DKG.sol":10445:10446  1 */
      0x1
        /* "DKG.sol":10425:10447  public_coefficients[1] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_198
      jumpi
      invalid
    tag_198:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":10385:10452  bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10449:10450  x */
      dup8
        /* "DKG.sol":10385:10452  bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      dup2
      mstore
      pop
        /* "DKG.sol":10385:10399  bn128_multiply */
      tag_92
        /* "DKG.sol":10385:10452  bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      jump	// in
    tag_196:
        /* "DKG.sol":10361:10452  uint256[2] memory tmp = bn128_multiply([public_coefficients[0], public_coefficients[1], x]) */
      swap3
      pop
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      tag_199
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":10478:10480  Fx */
      dup7
        /* "DKG.sol":10481:10482  0 */
      0x0
        /* "DKG.sol":10478:10483  Fx[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_200
      jumpi
      invalid
    tag_200:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10485:10487  Fx */
      dup7
        /* "DKG.sol":10488:10489  1 */
      0x1
        /* "DKG.sol":10485:10490  Fx[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_201
      jumpi
      invalid
    tag_201:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10492:10495  tmp */
      dup6
        /* "DKG.sol":10496:10497  0 */
      0x0
        /* "DKG.sol":10492:10498  tmp[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_202
      jumpi
      invalid
    tag_202:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10500:10503  tmp */
      dup6
        /* "DKG.sol":10504:10505  1 */
      0x1
        /* "DKG.sol":10500:10506  tmp[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_203
      jumpi
      invalid
    tag_203:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":10467:10476  bn128_add */
      tag_128
        /* "DKG.sol":10467:10508  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      jump	// in
    tag_199:
        /* "DKG.sol":10462:10508  Fx = bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      swap4
      pop
        /* "DKG.sol":10536:10537  2 */
      0x2
        /* "DKG.sol":10524:10537  uint256 j = 2 */
      swap2
      pop
        /* "DKG.sol":10519:10785  for (uint256 j = 2; j < public_coefficients.length; j += 2) { ... */
    tag_204:
        /* "DKG.sol":10543:10562  public_coefficients */
      dup12
        /* "DKG.sol":10543:10569  public_coefficients.length */
      mload
        /* "DKG.sol":10539:10540  j */
      dup3
        /* "DKG.sol":10539:10569  j < public_coefficients.length */
      lt
        /* "DKG.sol":10519:10785  for (uint256 j = 2; j < public_coefficients.length; j += 2) { ... */
      iszero
      tag_205
      jumpi
        /* "DKG.sol":79:156  21888242871839275222246405745257275088548364400416034343698204186575808495617 */
      0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
        /* "DKG.sol":10598:10623  mulmod(x, i, GROUP_ORDER) */
      dup1
      iszero
      iszero
      tag_207
      jumpi
      invalid
    tag_207:
        /* "DKG.sol":10608:10609  i */
      dup8
        /* "DKG.sol":10605:10606  x */
      dup7
        /* "DKG.sol":10598:10623  mulmod(x, i, GROUP_ORDER) */
      mulmod
        /* "DKG.sol":10594:10623  x = mulmod(x, i, GROUP_ORDER) */
      swap5
      pop
        /* "DKG.sol":10643:10714  bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      tag_208
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":10659:10678  public_coefficients */
      dup15
        /* "DKG.sol":10679:10680  j */
      dup6
        /* "DKG.sol":10659:10681  public_coefficients[j] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_209
      jumpi
      invalid
    tag_209:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":10643:10714  bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10683:10702  public_coefficients */
      dup15
        /* "DKG.sol":10707:10708  1 */
      0x1
        /* "DKG.sol":10703:10704  j */
      dup7
        /* "DKG.sol":10703:10708  j + 1 */
      add
        /* "DKG.sol":10683:10709  public_coefficients[j + 1] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_210
      jumpi
      invalid
    tag_210:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":10643:10714  bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10711:10712  x */
      dup8
        /* "DKG.sol":10643:10714  bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      dup2
      mstore
      pop
        /* "DKG.sol":10643:10657  bn128_multiply */
      tag_92
        /* "DKG.sol":10643:10714  bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      jump	// in
    tag_208:
        /* "DKG.sol":10637:10714  tmp = bn128_multiply([public_coefficients[j], public_coefficients[j + 1], x]) */
      swap3
      pop
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      tag_211
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":10744:10746  Fx */
      dup7
        /* "DKG.sol":10747:10748  0 */
      0x0
        /* "DKG.sol":10744:10749  Fx[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_212
      jumpi
      invalid
    tag_212:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10751:10753  Fx */
      dup7
        /* "DKG.sol":10754:10755  1 */
      0x1
        /* "DKG.sol":10751:10756  Fx[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_213
      jumpi
      invalid
    tag_213:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10758:10761  tmp */
      dup6
        /* "DKG.sol":10762:10763  0 */
      0x0
        /* "DKG.sol":10758:10764  tmp[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_214
      jumpi
      invalid
    tag_214:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10766:10769  tmp */
      dup6
        /* "DKG.sol":10770:10771  1 */
      0x1
        /* "DKG.sol":10766:10772  tmp[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_215
      jumpi
      invalid
    tag_215:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":10733:10742  bn128_add */
      tag_128
        /* "DKG.sol":10733:10774  bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      jump	// in
    tag_211:
        /* "DKG.sol":10728:10774  Fx = bn128_add([Fx[0], Fx[1], tmp[0], tmp[1]]) */
      swap4
      pop
        /* "DKG.sol":10576:10577  2 */
      0x2
        /* "DKG.sol":10571:10577  j += 2 */
      dup3
      add
      swap2
      pop
        /* "DKG.sol":10519:10785  for (uint256 j = 2; j < public_coefficients.length; j += 2) { ... */
      jump(tag_204)
    tag_205:
        /* "DKG.sol":10877:10910  bn128_multiply([g1x, g1y, share]) */
      tag_216
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":10877:10910  bn128_multiply([g1x, g1y, share]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":10877:10910  bn128_multiply([g1x, g1y, share]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":10903:10908  share */
      dup9
        /* "DKG.sol":10877:10910  bn128_multiply([g1x, g1y, share]) */
      dup2
      mstore
      pop
        /* "DKG.sol":10877:10891  bn128_multiply */
      tag_92
        /* "DKG.sol":10877:10910  bn128_multiply([g1x, g1y, share]) */
      jump	// in
    tag_216:
        /* "DKG.sol":10854:10910  uint256[2] memory Fi = bn128_multiply([g1x, g1y, share]) */
      swap1
      pop
        /* "DKG.sol":10991:10993  Fi */
      dup1
        /* "DKG.sol":10994:10995  0 */
      0x0
        /* "DKG.sol":10991:10996  Fi[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_217
      jumpi
      invalid
    tag_217:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10982:10984  Fx */
      dup5
        /* "DKG.sol":10985:10986  0 */
      0x0
        /* "DKG.sol":10982:10987  Fx[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_218
      jumpi
      invalid
    tag_218:
      0x20
      mul
      add
      mload
        /* "DKG.sol":10982:10996  Fx[0] != Fi[0] */
      eq
      iszero
        /* "DKG.sol":10982:11014  Fx[0] != Fi[0] || Fx[1] != Fi[1] */
      dup1
      tag_219
      jumpi
      pop
        /* "DKG.sol":11009:11011  Fi */
      dup1
        /* "DKG.sol":11012:11013  1 */
      0x1
        /* "DKG.sol":11009:11014  Fi[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_220
      jumpi
      invalid
    tag_220:
      0x20
      mul
      add
      mload
        /* "DKG.sol":11000:11002  Fx */
      dup5
        /* "DKG.sol":11003:11004  1 */
      0x1
        /* "DKG.sol":11000:11005  Fx[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_221
      jumpi
      invalid
    tag_221:
      0x20
      mul
      add
      mload
        /* "DKG.sol":11000:11014  Fx[1] != Fi[1] */
      eq
      iszero
        /* "DKG.sol":10982:11014  Fx[0] != Fi[0] || Fx[1] != Fi[1] */
    tag_219:
        /* "DKG.sol":10974:11064  require(Fx[0] != Fi[0] || Fx[1] != Fi[1], "dispute failed (the provided share was valid)") */
      iszero
      iszero
      tag_222
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x2d
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c656420287468652070726f766964656420736861
      dup2
      mstore
      0x20
      add
      0x7265207761732076616c69642900000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_222:
        /* "DKG.sol":11075:11097  __slash__(issuer_addr) */
      tag_223
        /* "DKG.sol":11085:11096  issuer_addr */
      dup15
        /* "DKG.sol":11075:11084  __slash__ */
      tag_224
        /* "DKG.sol":11075:11097  __slash__(issuer_addr) */
      jump	// in
    tag_223:
        /* "DKG.sol":8181:11104  function dispute_share(... */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":3203:3349  function in_finalization_phase()... */
    tag_51:
        /* "DKG.sol":3260:3264  bool */
      0x0
        /* "DKG.sol":3300:3312  block.number */
      number
        /* "DKG.sol":3284:3297  T_DISPUTE_END */
      sload(0xa)
        /* "DKG.sol":3284:3312  T_DISPUTE_END < block.number */
      lt
        /* "DKG.sol":3283:3342  (T_DISPUTE_END < block.number) && (T_GROUP_KEY_UPLOAD == 0) */
      dup1
      iszero
      tag_226
      jumpi
      pop
        /* "DKG.sol":3340:3341  0 */
      0x0
        /* "DKG.sol":3318:3336  T_GROUP_KEY_UPLOAD */
      sload(0xb)
        /* "DKG.sol":3318:3341  T_GROUP_KEY_UPLOAD == 0 */
      eq
        /* "DKG.sol":3283:3342  (T_DISPUTE_END < block.number) && (T_GROUP_KEY_UPLOAD == 0) */
    tag_226:
        /* "DKG.sol":3276:3342  return (T_DISPUTE_END < block.number) && (T_GROUP_KEY_UPLOAD == 0) */
      swap1
      pop
        /* "DKG.sol":3203:3349  function in_finalization_phase()... */
      swap1
      jump	// out
        /* "DKG.sol":1407:1458  uint256 public constant PARTICIPATION_THRESHOLD = 3 */
    tag_54:
        /* "DKG.sol":1457:1458  3 */
      0x3
        /* "DKG.sol":1407:1458  uint256 public constant PARTICIPATION_THRESHOLD = 3 */
      dup2
      jump	// out
        /* "DKG.sol":3942:5687  function register(uint256[2] pk, uint256[4] bls_pk, uint256[2] sk_knowledge_proof) ... */
    tag_56:
        /* "DKG.sol":5204:5214  uint256 id */
      0x0
        /* "DKG.sol":4068:4091  in_registration_phase() */
      tag_228
        /* "DKG.sol":4068:4089  in_registration_phase */
      tag_83
        /* "DKG.sol":4068:4091  in_registration_phase() */
      jump	// in
    tag_228:
        /* "DKG.sol":4060:4155  require(in_registration_phase(), "registration failed (contract is not in registration phase)") */
      iszero
      iszero
      tag_229
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3b
      dup2
      mstore
      0x20
      add
      dup1
      0x726567697374726174696f6e206661696c65642028636f6e7472616374206973
      dup2
      mstore
      0x20
      add
      0x206e6f7420696e20726567697374726174696f6e207068617365290000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_229:
        /* "DKG.sol":4197:4198  0 */
      0x0
        /* "DKG.sol":4173:4178  nodes */
      0x5
        /* "DKG.sol":4173:4190  nodes[msg.sender] */
      0x0
        /* "DKG.sol":4179:4189  msg.sender */
      caller
        /* "DKG.sol":4173:4190  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":4173:4193  nodes[msg.sender].id */
      0x0
      add
      sload
        /* "DKG.sol":4173:4198  nodes[msg.sender].id == 0 */
      eq
        /* "DKG.sol":4165:4264  require(nodes[msg.sender].id == 0, "registration failed (account already registered a public key)") */
      iszero
      iszero
      tag_230
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3d
      dup2
      mstore
      0x20
      add
      dup1
      0x726567697374726174696f6e206661696c656420286163636f756e7420616c72
      dup2
      mstore
      0x20
      add
      0x6561647920726567697374657265642061207075626c6963206b657929000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_230:
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      tag_231
      0x180
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":4547:4549  pk */
      dup7
        /* "DKG.sol":4550:4551  0 */
      0x0
        /* "DKG.sol":4547:4552  pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_232
      jumpi
      invalid
    tag_232:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":4554:4556  pk */
      dup7
        /* "DKG.sol":4557:4558  1 */
      0x1
        /* "DKG.sol":4554:4559  pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_233
      jumpi
      invalid
    tag_233:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":364:441  11559732032986387107991004021392285783925812861821192530917403151452391805634 */
      0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":471:548  10857046999023057135944570762232829481370756359578518086990519993285655852781 */
      0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":578:654  4082367875863433681332203403145435568316851327593401208105741076214120093531 */
      0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":684:760  8495653923123431417604973247489272438418190587263600148770280649306958101930 */
      0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":4819:4825  bls_pk */
      dup6
        /* "DKG.sol":4826:4827  0 */
      0x0
        /* "DKG.sol":4819:4828  bls_pk[0] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_234
      jumpi
      invalid
    tag_234:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":4830:4836  bls_pk */
      dup6
        /* "DKG.sol":4837:4838  1 */
      0x1
        /* "DKG.sol":4830:4839  bls_pk[1] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_235
      jumpi
      invalid
    tag_235:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":4841:4847  bls_pk */
      dup6
        /* "DKG.sol":4848:4849  2 */
      0x2
        /* "DKG.sol":4841:4850  bls_pk[2] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_236
      jumpi
      invalid
    tag_236:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":4852:4858  bls_pk */
      dup6
        /* "DKG.sol":4859:4860  3 */
      0x3
        /* "DKG.sol":4852:4861  bls_pk[3] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_237
      jumpi
      invalid
    tag_237:
      0x20
      mul
      add
      mload
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      dup2
      mstore
      pop
        /* "DKG.sol":4295:4314  bn128_check_pairing */
      tag_110
        /* "DKG.sol":4295:4880  bn128_check_pairing(                                    // ensures that the given pk and bls_pk correspond to each other... */
      jump	// in
    tag_231:
        /* "DKG.sol":4274:4954  require(... */
      iszero
      iszero
      tag_238
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x2f
      dup2
      mstore
      0x20
      add
      dup1
      0x726567697374726174696f6e206661696c65642028626c73207075626c696320
      dup2
      mstore
      0x20
      add
      0x6b657920697320696e76616c6964290000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_238:
        /* "DKG.sol":4985:5028  verify_sk_knowledge(pk, sk_knowledge_proof) */
      tag_239
        /* "DKG.sol":5005:5007  pk */
      dup5
        /* "DKG.sol":5009:5027  sk_knowledge_proof */
      dup4
        /* "DKG.sol":4985:5004  verify_sk_knowledge */
      tag_98
        /* "DKG.sol":4985:5028  verify_sk_knowledge(pk, sk_knowledge_proof) */
      jump	// in
    tag_239:
        /* "DKG.sol":4964:5114  require(... */
      iszero
      iszero
      tag_240
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3b
      dup2
      mstore
      0x20
      add
      dup1
      0x726567697374726174696f6e206661696c65642028696e76616c69642070726f
      dup2
      mstore
      0x20
      add
      0x6f66206f6620736563726574206b6579206b6e6f776c65676465290000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_240:
        /* "DKG.sol":5157:5177  registered_addresses */
      0x4
        /* "DKG.sol":5183:5193  msg.sender */
      caller
        /* "DKG.sol":5157:5194  registered_addresses.push(msg.sender) */
      swap1
      dup1
        /* "--CODEGEN--":39:40   */
      0x1
        /* "--CODEGEN--":33:36   */
      dup2
        /* "--CODEGEN--":27:37   */
      sload
        /* "--CODEGEN--":23:41   */
      add
        /* "--CODEGEN--":57:67   */
      dup1
        /* "--CODEGEN--":52:55   */
      dup3
        /* "--CODEGEN--":45:68   */
      sstore
        /* "--CODEGEN--":79:89   */
      dup1
        /* "--CODEGEN--":72:89   */
      swap2
      pop
        /* "--CODEGEN--":0:93   */
      pop
        /* "DKG.sol":5157:5194  registered_addresses.push(msg.sender) */
      swap1
      0x1
      dup3
      sub
      swap1
      0x0
      mstore
      keccak256(0x0, 0x20)
      add
      0x0
      swap1
      swap2
      swap3
      swap1
      swap2
      swap1
      swap2
      0x100
      exp
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
      pop
        /* "DKG.sol":5217:5237  registered_addresses */
      0x4
        /* "DKG.sol":5217:5244  registered_addresses.length */
      dup1
      sload
      swap1
      pop
        /* "DKG.sol":5204:5244  uint256 id = registered_addresses.length */
      swap1
      pop
        /* "DKG.sol":5286:5288  id */
      dup1
        /* "DKG.sol":5263:5268  nodes */
      0x5
        /* "DKG.sol":5263:5280  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5269:5279  msg.sender */
      caller
        /* "DKG.sol":5263:5280  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5263:5283  nodes[msg.sender].id */
      0x0
      add
        /* "DKG.sol":5263:5288  nodes[msg.sender].id = id */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5326:5335  msg.value */
      callvalue
        /* "DKG.sol":5298:5303  nodes */
      0x5
        /* "DKG.sol":5298:5315  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5304:5314  msg.sender */
      caller
        /* "DKG.sol":5298:5315  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5298:5323  nodes[msg.sender].deposit */
      0x1
      add
        /* "DKG.sol":5298:5335  nodes[msg.sender].deposit = msg.value */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5371:5373  pk */
      dup4
        /* "DKG.sol":5374:5375  0 */
      0x0
        /* "DKG.sol":5371:5376  pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_242
      jumpi
      invalid
    tag_242:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5345:5350  nodes */
      0x5
        /* "DKG.sol":5345:5362  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5351:5361  msg.sender */
      caller
        /* "DKG.sol":5345:5362  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5345:5365  nodes[msg.sender].pk */
      0x2
      add
        /* "DKG.sol":5366:5367  0 */
      0x0
        /* "DKG.sol":5345:5368  nodes[msg.sender].pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_243
      jumpi
      invalid
    tag_243:
      add
        /* "DKG.sol":5345:5376  nodes[msg.sender].pk[0] = pk[0] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5412:5414  pk */
      dup4
        /* "DKG.sol":5415:5416  1 */
      0x1
        /* "DKG.sol":5412:5417  pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_245
      jumpi
      invalid
    tag_245:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5386:5391  nodes */
      0x5
        /* "DKG.sol":5386:5403  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5392:5402  msg.sender */
      caller
        /* "DKG.sol":5386:5403  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5386:5406  nodes[msg.sender].pk */
      0x2
      add
        /* "DKG.sol":5407:5408  1 */
      0x1
        /* "DKG.sol":5386:5409  nodes[msg.sender].pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_246
      jumpi
      invalid
    tag_246:
      add
        /* "DKG.sol":5386:5417  nodes[msg.sender].pk[1] = pk[1] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5457:5463  bls_pk */
      dup3
        /* "DKG.sol":5464:5465  0 */
      0x0
        /* "DKG.sol":5457:5466  bls_pk[0] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_248
      jumpi
      invalid
    tag_248:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5427:5432  nodes */
      0x5
        /* "DKG.sol":5427:5444  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5433:5443  msg.sender */
      caller
        /* "DKG.sol":5427:5444  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5427:5451  nodes[msg.sender].bls_pk */
      0x4
      add
        /* "DKG.sol":5452:5453  0 */
      0x0
        /* "DKG.sol":5427:5454  nodes[msg.sender].bls_pk[0] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_249
      jumpi
      invalid
    tag_249:
      add
        /* "DKG.sol":5427:5466  nodes[msg.sender].bls_pk[0] = bls_pk[0] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5506:5512  bls_pk */
      dup3
        /* "DKG.sol":5513:5514  1 */
      0x1
        /* "DKG.sol":5506:5515  bls_pk[1] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_251
      jumpi
      invalid
    tag_251:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5476:5481  nodes */
      0x5
        /* "DKG.sol":5476:5493  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5482:5492  msg.sender */
      caller
        /* "DKG.sol":5476:5493  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5476:5500  nodes[msg.sender].bls_pk */
      0x4
      add
        /* "DKG.sol":5501:5502  1 */
      0x1
        /* "DKG.sol":5476:5503  nodes[msg.sender].bls_pk[1] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_252
      jumpi
      invalid
    tag_252:
      add
        /* "DKG.sol":5476:5515  nodes[msg.sender].bls_pk[1] = bls_pk[1] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5555:5561  bls_pk */
      dup3
        /* "DKG.sol":5562:5563  2 */
      0x2
        /* "DKG.sol":5555:5564  bls_pk[2] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_254
      jumpi
      invalid
    tag_254:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5525:5530  nodes */
      0x5
        /* "DKG.sol":5525:5542  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5531:5541  msg.sender */
      caller
        /* "DKG.sol":5525:5542  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5525:5549  nodes[msg.sender].bls_pk */
      0x4
      add
        /* "DKG.sol":5550:5551  2 */
      0x2
        /* "DKG.sol":5525:5552  nodes[msg.sender].bls_pk[2] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_255
      jumpi
      invalid
    tag_255:
      add
        /* "DKG.sol":5525:5564  nodes[msg.sender].bls_pk[2] = bls_pk[2] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5604:5610  bls_pk */
      dup3
        /* "DKG.sol":5611:5612  3 */
      0x3
        /* "DKG.sol":5604:5613  bls_pk[3] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_257
      jumpi
      invalid
    tag_257:
      0x20
      mul
      add
      mload
        /* "DKG.sol":5574:5579  nodes */
      0x5
        /* "DKG.sol":5574:5591  nodes[msg.sender] */
      0x0
        /* "DKG.sol":5580:5590  msg.sender */
      caller
        /* "DKG.sol":5574:5591  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":5574:5598  nodes[msg.sender].bls_pk */
      0x4
      add
        /* "DKG.sol":5599:5600  3 */
      0x3
        /* "DKG.sol":5574:5601  nodes[msg.sender].bls_pk[3] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_258
      jumpi
      invalid
    tag_258:
      add
        /* "DKG.sol":5574:5613  nodes[msg.sender].bls_pk[3] = bls_pk[3] */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":5629:5680  Registration(msg.sender, id, msg.value, pk, bls_pk) */
      0x4469beb2ff204caae6761a793ea738c8812d42f6313ca0aa3c02e714b0654515
        /* "DKG.sol":5642:5652  msg.sender */
      caller
        /* "DKG.sol":5654:5656  id */
      dup3
        /* "DKG.sol":5658:5667  msg.value */
      callvalue
        /* "DKG.sol":5669:5671  pk */
      dup8
        /* "DKG.sol":5673:5679  bls_pk */
      dup8
        /* "DKG.sol":5629:5680  Registration(msg.sender, id, msg.value, pk, bls_pk) */
      mload(0x40)
      dup1
      dup7
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup6
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_260:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_261
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_260)
    tag_261:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":5629:5680  Registration(msg.sender, id, msg.value, pk, bls_pk) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      mul(0x20, 0x4)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_263:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_264
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_263)
    tag_264:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":5629:5680  Registration(msg.sender, id, msg.value, pk, bls_pk) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap6
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "DKG.sol":3942:5687  function register(uint256[2] pk, uint256[4] bls_pk, uint256[2] sk_knowledge_proof) ... */
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":2890:3043  function in_sharing_phase() ... */
    tag_59:
        /* "DKG.sol":2943:2947  bool */
      0x0
        /* "DKG.sol":2988:3000  block.number */
      number
        /* "DKG.sol":2967:2985  T_REGISTRATION_END */
      sload(0x8)
        /* "DKG.sol":2967:3000  T_REGISTRATION_END < block.number */
      lt
        /* "DKG.sol":2966:3036  (T_REGISTRATION_END < block.number) && (block.number <= T_SHARING_END) */
      dup1
      iszero
      tag_267
      jumpi
      pop
        /* "DKG.sol":3022:3035  T_SHARING_END */
      sload(0x9)
        /* "DKG.sol":3006:3018  block.number */
      number
        /* "DKG.sol":3006:3035  block.number <= T_SHARING_END */
      gt
      iszero
        /* "DKG.sol":2966:3036  (T_REGISTRATION_END < block.number) && (block.number <= T_SHARING_END) */
    tag_267:
        /* "DKG.sol":2959:3036  return (T_REGISTRATION_END < block.number) && (block.number <= T_SHARING_END) */
      swap1
      pop
        /* "DKG.sol":2890:3043  function in_sharing_phase() ... */
      swap1
      jump	// out
        /* "DKG.sol":13623:15017  function abort() ... */
    tag_62:
        /* "DKG.sol":13817:13826  uint256 n */
      0x0
        /* "DKG.sol":13866:13875  uint256 t */
      dup1
        /* "DKG.sol":14334:14343  uint256 p */
      0x0
        /* "DKG.sol":14425:14434  uint256 i */
      dup1
        /* "DKG.sol":14470:14486  Node memory node */
      tag_268
      jump	// in(tag_269)
    tag_268:
        /* "DKG.sol":13725:13748  in_registration_phase() */
      tag_271
        /* "DKG.sol":13725:13746  in_registration_phase */
      tag_83
        /* "DKG.sol":13725:13748  in_registration_phase() */
      jump	// in
    tag_271:
        /* "DKG.sol":13724:13748  !in_registration_phase() */
      iszero
        /* "DKG.sol":13716:13806  require(!in_registration_phase(), "abort failed (cannot abort during registration phase)") */
      iszero
      iszero
      tag_272
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x35
      dup2
      mstore
      0x20
      add
      dup1
      0x61626f7274206661696c6564202863616e6e6f742061626f727420647572696e
      dup2
      mstore
      0x20
      add
      0x6720726567697374726174696f6e207068617365290000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_272:
        /* "DKG.sol":13829:13849  registered_addresses */
      0x4
        /* "DKG.sol":13829:13856  registered_addresses.length */
      dup1
      sload
      swap1
      pop
        /* "DKG.sol":13817:13856  uint256 n = registered_addresses.length */
      swap5
      pop
        /* "DKG.sol":13888:13889  1 */
      0x1
        /* "DKG.sol":13883:13884  2 */
      0x2
        /* "DKG.sol":13879:13880  n */
      dup7
        /* "DKG.sol":13879:13884  n / 2 */
      dup2
      iszero
      iszero
      tag_273
      jumpi
      invalid
    tag_273:
      div
        /* "DKG.sol":13878:13889  (n / 2) + 1 */
      add
        /* "DKG.sol":13866:13889  uint256 t = (n / 2) + 1 */
      swap4
      pop
        /* "DKG.sol":1457:1458  3 */
      0x3
        /* "DKG.sol":13977:13978  n */
      dup6
        /* "DKG.sol":13977:14004  n < PARTICIPATION_THRESHOLD */
      lt
        /* "DKG.sol":13973:15011  if (n < PARTICIPATION_THRESHOLD) {... */
      iszero
      tag_274
      jumpi
        /* "DKG.sol":14020:14031  __abort__() */
      tag_275
        /* "DKG.sol":14020:14029  __abort__ */
      tag_276
        /* "DKG.sol":14020:14031  __abort__() */
      jump	// in
    tag_275:
        /* "DKG.sol":13973:15011  if (n < PARTICIPATION_THRESHOLD) {... */
      jump(tag_277)
    tag_274:
        /* "DKG.sol":14206:14218  block.number */
      number
        /* "DKG.sol":14190:14203  T_SHARING_END */
      sload(0x9)
        /* "DKG.sol":14190:14218  T_SHARING_END < block.number */
      lt
        /* "DKG.sol":14165:14320  require(... */
      iszero
      iszero
      tag_278
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x43
      dup2
      mstore
      0x20
      add
      dup1
      0x61626f7274206661696c6564202861626f7274206973206f6e6c7920706f7373
      dup2
      mstore
      0x20
      add
      0x69626c65206166746572206b65792073686172696e6720706861736520656e64
      dup2
      mstore
      0x20
      add
      0x6564290000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_278:
        /* "DKG.sol":14346:14347  0 */
      0x0
        /* "DKG.sol":14334:14347  uint256 p = 0 */
      swap3
      pop
        /* "DKG.sol":14437:14438  0 */
      0x0
        /* "DKG.sol":14425:14438  uint256 i = 0 */
      swap2
      pop
        /* "DKG.sol":14420:14810  for (uint256 i = 0; i < n; i++) {... */
    tag_279:
        /* "DKG.sol":14444:14445  n */
      dup5
        /* "DKG.sol":14440:14441  i */
      dup3
        /* "DKG.sol":14440:14445  i < n */
      lt
        /* "DKG.sol":14420:14810  for (uint256 i = 0; i < n; i++) {... */
      iszero
      tag_280
      jumpi
        /* "DKG.sol":14489:14494  nodes */
      0x5
        /* "DKG.sol":14489:14519  nodes[registered_addresses[i]] */
      0x0
        /* "DKG.sol":14495:14515  registered_addresses */
      0x4
        /* "DKG.sol":14516:14517  i */
      dup5
        /* "DKG.sol":14495:14518  registered_addresses[i] */
      dup2
      sload
      dup2
      lt
      iszero
      iszero
      tag_282
      jumpi
      invalid
    tag_282:
      swap1
      0x0
      mstore
      keccak256(0x0, 0x20)
      add
      0x0
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "DKG.sol":14489:14519  nodes[registered_addresses[i]] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":14470:14519  Node memory node = nodes[registered_addresses[i]] */
      0xa0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      swap1
      dup2
      0x0
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x1
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x2
      dup3
      add
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x2
      dup1
      iszero
      tag_284
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_285:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_285
      jumpi
    tag_284:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x4
      dup3
      add
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x4
      dup1
      iszero
      tag_286
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_287:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_287
      jumpi
    tag_286:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x8
      dup3
      add
      sload
      not(0x0)
      and
      not(0x0)
      and
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "DKG.sol":14696:14697  0 */
      0x0
        /* "DKG.sol":14685:14689  node */
      dup2
        /* "DKG.sol":14685:14692  node.id */
      0x0
      add
      mload
        /* "DKG.sol":14685:14697  node.id != 0 */
      eq
      iszero
        /* "DKG.sol":14684:14733  (node.id != 0) && node.key_distribution_hash != 0 */
      dup1
      iszero
      tag_288
      jumpi
      pop
        /* "DKG.sol":14732:14733  0 */
      0x0
        /* "DKG.sol":14702:14733  node.key_distribution_hash != 0 */
      0x1
      mul
        /* "DKG.sol":14702:14706  node */
      dup2
        /* "DKG.sol":14702:14728  node.key_distribution_hash */
      0x80
      add
      mload
        /* "DKG.sol":14702:14733  node.key_distribution_hash != 0 */
      not(0x0)
      and
      eq
      iszero
        /* "DKG.sol":14684:14733  (node.id != 0) && node.key_distribution_hash != 0 */
    tag_288:
        /* "DKG.sol":14680:14780  if ((node.id != 0) && node.key_distribution_hash != 0)  {... */
      iszero
      tag_289
      jumpi
        /* "DKG.sol":14758:14761  p++ */
      dup3
      dup1
      0x1
      add
      swap4
      pop
      pop
        /* "DKG.sol":14680:14780  if ((node.id != 0) && node.key_distribution_hash != 0)  {... */
    tag_289:
        /* "DKG.sol":14447:14450  i++ */
      dup2
      dup1
      0x1
      add
      swap3
      pop
      pop
        /* "DKG.sol":14420:14810  for (uint256 i = 0; i < n; i++) {... */
      jump(tag_279)
    tag_280:
        /* "DKG.sol":14852:14853  t */
      dup4
        /* "DKG.sol":14848:14849  p */
      dup4
        /* "DKG.sol":14848:14853  p < t */
      lt
        /* "DKG.sol":14823:14975  require(... */
      iszero
      iszero
      tag_290
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x58
      dup2
      mstore
      0x20
      add
      dup1
      0x61626f7274206661696c6564202861626f7274206973206f6e6c7920706f7373
      dup2
      mstore
      0x20
      add
      0x69626c65206966206c657373207468616e2074206e6f64657320736861726564
      dup2
      mstore
      0x20
      add
      0x207468656972206b6579207375636365737366756c6c79290000000000000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_290:
        /* "DKG.sol":14989:15000  __abort__() */
      tag_291
        /* "DKG.sol":14989:14998  __abort__ */
      tag_276
        /* "DKG.sol":14989:15000  __abort__() */
      jump	// in
    tag_291:
        /* "DKG.sol":13973:15011  if (n < PARTICIPATION_THRESHOLD) {... */
    tag_277:
        /* "DKG.sol":13623:15017  function abort() ... */
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":17150:17770  function verify_signature(uint256[4] bls_pk, bytes32 message, uint256[2] signature) ... */
    tag_65:
        /* "DKG.sol":17255:17275  bool signature_valid */
      0x0
        /* "DKG.sol":17291:17307  uint[2] memory h */
      tag_292
      jump	// in(tag_161)
    tag_292:
        /* "DKG.sol":17310:17334  bn128_map_to_G1(message) */
      tag_294
        /* "DKG.sol":17326:17333  message */
      dup5
        /* "DKG.sol":17310:17325  bn128_map_to_G1 */
      tag_116
        /* "DKG.sol":17310:17334  bn128_map_to_G1(message) */
      jump	// in
    tag_294:
        /* "DKG.sol":17291:17334  uint[2] memory h = bn128_map_to_G1(message) */
      swap1
      pop
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      tag_295
      0x180
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":17498:17507  signature */
      dup6
        /* "DKG.sol":17508:17509  0 */
      0x0
        /* "DKG.sol":17498:17510  signature[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_296
      jumpi
      invalid
    tag_296:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17512:17521  signature */
      dup6
        /* "DKG.sol":17522:17523  1 */
      0x1
        /* "DKG.sol":17512:17524  signature[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_297
      jumpi
      invalid
    tag_297:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":364:441  11559732032986387107991004021392285783925812861821192530917403151452391805634 */
      0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":471:548  10857046999023057135944570762232829481370756359578518086990519993285655852781 */
      0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":578:654  4082367875863433681332203403145435568316851327593401208105741076214120093531 */
      0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":684:760  8495653923123431417604973247489272438418190587263600148770280649306958101930 */
      0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17640:17641  h */
      dup4
        /* "DKG.sol":17642:17643  0 */
      0x0
        /* "DKG.sol":17640:17644  h[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_298
      jumpi
      invalid
    tag_298:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17646:17647  h */
      dup4
        /* "DKG.sol":17648:17649  1 */
      0x1
        /* "DKG.sol":17646:17650  h[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_299
      jumpi
      invalid
    tag_299:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17706:17712  bls_pk */
      dup8
        /* "DKG.sol":17713:17714  0 */
      0x0
        /* "DKG.sol":17706:17715  bls_pk[0] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_300
      jumpi
      invalid
    tag_300:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17717:17723  bls_pk */
      dup8
        /* "DKG.sol":17724:17725  1 */
      0x1
        /* "DKG.sol":17717:17726  bls_pk[1] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_301
      jumpi
      invalid
    tag_301:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17728:17734  bls_pk */
      dup8
        /* "DKG.sol":17735:17736  2 */
      0x2
        /* "DKG.sol":17728:17737  bls_pk[2] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_302
      jumpi
      invalid
    tag_302:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":17739:17745  bls_pk */
      dup8
        /* "DKG.sol":17746:17747  3 */
      0x3
        /* "DKG.sol":17739:17748  bls_pk[3] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_303
      jumpi
      invalid
    tag_303:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      dup2
      mstore
      pop
        /* "DKG.sol":17362:17381  bn128_check_pairing */
      tag_110
        /* "DKG.sol":17362:17763  bn128_check_pairing(                                   ... */
      jump	// in
    tag_295:
        /* "DKG.sol":17344:17763  signature_valid = bn128_check_pairing(                                   ... */
      swap2
      pop
        /* "DKG.sol":17150:17770  function verify_signature(uint256[4] bls_pk, bytes32 message, uint256[2] signature) ... */
      pop
      swap4
      swap3
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":3049:3197  function in_dispute_phase() ... */
    tag_68:
        /* "DKG.sol":3102:3106  bool */
      0x0
        /* "DKG.sol":3142:3154  block.number */
      number
        /* "DKG.sol":3126:3139  T_SHARING_END */
      sload(0x9)
        /* "DKG.sol":3126:3154  T_SHARING_END < block.number */
      lt
        /* "DKG.sol":3125:3190  (T_SHARING_END < block.number) && (block.number <= T_DISPUTE_END) */
      dup1
      iszero
      tag_305
      jumpi
      pop
        /* "DKG.sol":3176:3189  T_DISPUTE_END */
      sload(0xa)
        /* "DKG.sol":3160:3172  block.number */
      number
        /* "DKG.sol":3160:3189  block.number <= T_DISPUTE_END */
      gt
      iszero
        /* "DKG.sol":3125:3190  (T_SHARING_END < block.number) && (block.number <= T_DISPUTE_END) */
    tag_305:
        /* "DKG.sol":3118:3190  return (T_SHARING_END < block.number) && (block.number <= T_DISPUTE_END) */
      swap1
      pop
        /* "DKG.sol":3049:3197  function in_dispute_phase() ... */
      swap1
      jump	// out
        /* "DKG.sol":6747:8175  function dispute_public_coefficient(... */
    tag_71:
        /* "DKG.sol":7219:7238  Node storage issuer */
      0x0
        /* "DKG.sol":7269:7290  Node storage verifier */
      dup1
        /* "DKG.sol":7921:7930  uint256 i */
      0x0
        /* "DKG.sol":7241:7246  nodes */
      0x5
        /* "DKG.sol":7241:7259  nodes[issuer_addr] */
      0x0
        /* "DKG.sol":7247:7258  issuer_addr */
      dup9
        /* "DKG.sol":7241:7259  nodes[issuer_addr] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":7219:7259  Node storage issuer = nodes[issuer_addr] */
      swap3
      pop
        /* "DKG.sol":7293:7298  nodes */
      0x5
        /* "DKG.sol":7293:7310  nodes[msg.sender] */
      0x0
        /* "DKG.sol":7299:7309  msg.sender */
      caller
        /* "DKG.sol":7293:7310  nodes[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":7269:7310  Node storage verifier = nodes[msg.sender] */
      swap2
      pop
        /* "DKG.sol":7329:7347  in_dispute_phase() */
      tag_307
        /* "DKG.sol":7329:7345  in_dispute_phase */
      tag_68
        /* "DKG.sol":7329:7347  in_dispute_phase() */
      jump	// in
    tag_307:
        /* "DKG.sol":7321:7401  require(in_dispute_phase(), "dispute failed (contract is not in sharing phase)") */
      iszero
      iszero
      tag_308
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x31
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028636f6e7472616374206973206e6f7420
      dup2
      mstore
      0x20
      add
      0x696e2073686172696e6720706861736529000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_308:
        /* "DKG.sol":7431:7432  0 */
      0x0
        /* "DKG.sol":7419:7425  issuer */
      dup4
        /* "DKG.sol":7419:7428  issuer.id */
      0x0
      add
      sload
        /* "DKG.sol":7419:7432  issuer.id > 0 */
      gt
        /* "DKG.sol":7411:7494  require(issuer.id > 0, "dispute failed/aborted (issuer not registered or slashed)") */
      iszero
      iszero
      tag_309
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x39
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642f61626f727465642028697373756572206e
      dup2
      mstore
      0x20
      add
      0x6f742072656769737465726564206f7220736c61736865642900000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_309:
        /* "DKG.sol":7526:7527  0 */
      0x0
        /* "DKG.sol":7512:7520  verifier */
      dup3
        /* "DKG.sol":7512:7523  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":7512:7527  verifier.id > 0 */
      gt
        /* "DKG.sol":7504:7591  require(verifier.id > 0, "dispute failed/aborted (verifier not registered or slashed)") */
      iszero
      iszero
      tag_310
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x3b
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642f61626f7274656420287665726966696572
      dup2
      mstore
      0x20
      add
      0x206e6f742072656769737465726564206f7220736c6173686564290000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_310:
        /* "DKG.sol":7622:7630  verifier */
      dup2
        /* "DKG.sol":7622:7633  verifier.id */
      0x0
      add
      sload
        /* "DKG.sol":7609:7615  issuer */
      dup4
        /* "DKG.sol":7609:7618  issuer.id */
      0x0
      add
      sload
        /* "DKG.sol":7609:7633  issuer.id != verifier.id */
      eq
      iszero
        /* "DKG.sol":7601:7682  require(issuer.id != verifier.id, "dispute failed (self dispute is not allowed)") */
      iszero
      iszero
      tag_311
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x2c
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c6564202873656c66206469737075746520697320
      dup2
      mstore
      0x20
      add
      0x6e6f7420616c6c6f776564290000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_311:
        /* "DKG.sol":7772:7788  encrypted_shares */
      dup6
        /* "DKG.sol":7790:7809  public_coefficients */
      dup6
        /* "DKG.sol":7755:7810  abi.encodePacked(encrypted_shares, public_coefficients) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_312:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_313
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_312)
    tag_313:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":7755:7810  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      0x20
      mul
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_315:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_316
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_315)
    tag_316:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":7755:7810  abi.encodePacked(encrypted_shares, public_coefficients) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":7755:7810  abi.encodePacked(encrypted_shares, public_coefficients) */
      swap1
      0x40
      mstore
        /* "DKG.sol":7745:7811  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_318:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_319
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_318)
    tag_319:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":7745:7811  keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":7713:7811  issuer.key_distribution_hash == keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      not(0x0)
      and
        /* "DKG.sol":7713:7719  issuer */
      dup4
        /* "DKG.sol":7713:7741  issuer.key_distribution_hash */
      0x8
      add
      sload
        /* "DKG.sol":7713:7811  issuer.key_distribution_hash == keccak256(abi.encodePacked(encrypted_shares, public_coefficients)) */
      not(0x0)
      and
      eq
        /* "DKG.sol":7692:7910  require(... */
      iszero
      iszero
      tag_321
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x49
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028656e6372797074656420736861726573
      dup2
      mstore
      0x20
      add
      0x20616e642f6f72207075626c696320636f656666696369656e7473206e6f7420
      dup2
      mstore
      0x20
      add
      0x6d61746368696e67290000000000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_321:
        /* "DKG.sol":7959:7960  2 */
      0x2
        /* "DKG.sol":7933:7956  invalid_coefficient_idx */
      dup5
        /* "DKG.sol":7933:7960  invalid_coefficient_idx * 2 */
      mul
        /* "DKG.sol":7921:7960  uint256 i = invalid_coefficient_idx * 2 */
      swap1
      pop
        /* "DKG.sol":7992:8063  bn128_is_on_curve([public_coefficients[i], public_coefficients[i + 1]]) */
      tag_322
      0x40
      dup1
      mload
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":8011:8030  public_coefficients */
      dup8
        /* "DKG.sol":8031:8032  i */
      dup5
        /* "DKG.sol":8011:8033  public_coefficients[i] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_323
      jumpi
      invalid
    tag_323:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":7992:8063  bn128_is_on_curve([public_coefficients[i], public_coefficients[i + 1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":8035:8054  public_coefficients */
      dup8
        /* "DKG.sol":8059:8060  1 */
      0x1
        /* "DKG.sol":8055:8056  i */
      dup6
        /* "DKG.sol":8055:8060  i + 1 */
      add
        /* "DKG.sol":8035:8061  public_coefficients[i + 1] */
      dup2
      mload
      dup2
      lt
      iszero
      iszero
      tag_324
      jumpi
      invalid
    tag_324:
      swap1
      0x20
      add
      swap1
      0x20
      mul
      add
      mload
        /* "DKG.sol":7992:8063  bn128_is_on_curve([public_coefficients[i], public_coefficients[i + 1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":7992:8009  bn128_is_on_curve */
      tag_137
        /* "DKG.sol":7992:8063  bn128_is_on_curve([public_coefficients[i], public_coefficients[i + 1]]) */
      jump	// in
    tag_322:
        /* "DKG.sol":7991:8063  !bn128_is_on_curve([public_coefficients[i], public_coefficients[i + 1]]) */
      iszero
        /* "DKG.sol":7970:8135  require(... */
      iszero
      iszero
      tag_325
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x2e
      dup2
      mstore
      0x20
      add
      dup1
      0x64697370757465206661696c65642028636f656666696369656e742069732061
      dup2
      mstore
      0x20
      add
      0x637475616c6c792076616c696429000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_325:
        /* "DKG.sol":8146:8168  __slash__(issuer_addr) */
      tag_326
        /* "DKG.sol":8156:8167  issuer_addr */
      dup8
        /* "DKG.sol":8146:8155  __slash__ */
      tag_224
        /* "DKG.sol":8146:8168  __slash__(issuer_addr) */
      jump	// in
    tag_326:
        /* "DKG.sol":6747:8175  function dispute_public_coefficient(... */
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":3769:3935  function group_key_confirmed()... */
    tag_74:
        /* "DKG.sol":3824:3828  bool */
      0x0
        /* "DKG.sol":3870:3871  0 */
      dup1
        /* "DKG.sol":3848:3866  T_GROUP_KEY_UPLOAD */
      sload(0xb)
        /* "DKG.sol":3848:3871  T_GROUP_KEY_UPLOAD != 0 */
      eq
      iszero
        /* "DKG.sol":3847:3928  (T_GROUP_KEY_UPLOAD != 0) && (T_GROUP_KEY_UPLOAD + DELTA_CONFIRM <= block.number) */
      dup1
      iszero
      tag_328
      jumpi
      pop
        /* "DKG.sol":3915:3927  block.number */
      number
        /* "DKG.sol":1400:1401  2 */
      0x2
        /* "DKG.sol":3877:3895  T_GROUP_KEY_UPLOAD */
      sload(0xb)
        /* "DKG.sol":3877:3911  T_GROUP_KEY_UPLOAD + DELTA_CONFIRM */
      add
        /* "DKG.sol":3877:3927  T_GROUP_KEY_UPLOAD + DELTA_CONFIRM <= block.number */
      gt
      iszero
        /* "DKG.sol":3847:3928  (T_GROUP_KEY_UPLOAD != 0) && (T_GROUP_KEY_UPLOAD + DELTA_CONFIRM <= block.number) */
    tag_328:
        /* "DKG.sol":3840:3928  return (T_GROUP_KEY_UPLOAD != 0) && (T_GROUP_KEY_UPLOAD + DELTA_CONFIRM <= block.number) */
      swap1
      pop
        /* "DKG.sol":3769:3935  function group_key_confirmed()... */
      swap1
      jump	// out
        /* "DKG.sol":2075:2108  uint256 public T_GROUP_KEY_UPLOAD */
    tag_77:
      sload(0xb)
      dup2
      jump	// out
        /* "DKG.sol":1360:1401  uint256 public constant DELTA_CONFIRM = 2 */
    tag_80:
        /* "DKG.sol":1400:1401  2 */
      0x2
        /* "DKG.sol":1360:1401  uint256 public constant DELTA_CONFIRM = 2 */
      dup2
      jump	// out
        /* "DKG.sol":2762:2884  function in_registration_phase() ... */
    tag_83:
        /* "DKG.sol":2820:2824  bool */
      0x0
        /* "DKG.sol":2859:2877  T_REGISTRATION_END */
      sload(0x8)
        /* "DKG.sol":2843:2855  block.number */
      number
        /* "DKG.sol":2843:2877  block.number <= T_REGISTRATION_END */
      gt
      iszero
        /* "DKG.sol":2836:2877  return block.number <= T_REGISTRATION_END */
      swap1
      pop
        /* "DKG.sol":2762:2884  function in_registration_phase() ... */
      swap1
      jump	// out
        /* "DKG.sol":3635:3763  function dispute_confirmed()... */
    tag_86:
        /* "DKG.sol":3688:3692  bool */
      0x0
        /* "DKG.sol":3744:3756  block.number */
      number
        /* "DKG.sol":1400:1401  2 */
      0x2
        /* "DKG.sol":3711:3724  T_DISPUTE_END */
      sload(0xa)
        /* "DKG.sol":3711:3740  T_DISPUTE_END + DELTA_CONFIRM */
      add
        /* "DKG.sol":3711:3756  T_DISPUTE_END + DELTA_CONFIRM <= block.number */
      gt
      iszero
        /* "DKG.sol":3704:3756  return T_DISPUTE_END + DELTA_CONFIRM <= block.number */
      swap1
      pop
        /* "DKG.sol":3635:3763  function dispute_confirmed()... */
      swap1
      jump	// out
        /* "DKG.sol":1279:1298  bool public aborted */
    tag_89:
      0x6
      0x0
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xff
      and
      dup2
      jump	// out
        /* "DKG.sol":18558:19340  function bn128_multiply(uint256[3] input) ... */
    tag_92:
        /* "DKG.sol":18621:18638  uint256[2] result */
      tag_331
      jump	// in(tag_161)
    tag_331:
        /* "DKG.sol":18821:18833  bool success */
      0x0
        /* "DKG.sol":19255:19257  64 */
      0x40
        /* "DKG.sol":19247:19253  result */
      dup3
        /* "DKG.sol":19243:19245  96 */
      0x60
        /* "DKG.sol":19236:19241  input */
      dup6
        /* "DKG.sol":19233:19234  0 */
      0x0
        /* "DKG.sol":19227:19231  0x07 */
      0x7
        /* "DKG.sol":19223:19224  0 */
      0x0
        /* "DKG.sol":19219:19225  not(0) */
      not
        /* "DKG.sol":19214:19258  call(not(0), 0x07, 0, input, 96, result, 64) */
      call
        /* "DKG.sol":19203:19258  success := call(not(0), 0x07, 0, input, 96, result, 64) */
      swap1
      pop
        /* "DKG.sol":19285:19292  success */
      dup1
        /* "DKG.sol":19277:19333  require(success, "elliptic curve multiplication failed") */
      iszero
      iszero
      tag_333
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x24
      dup2
      mstore
      0x20
      add
      dup1
      0x656c6c6970746963206375727665206d756c7469706c69636174696f6e206661
      dup2
      mstore
      0x20
      add
      0x696c656400000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      pop
      0x40
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_333:
        /* "DKG.sol":18558:19340  function bn128_multiply(uint256[3] input) ... */
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":15374:15874  function verify_sk_knowledge(uint[2] public_key, uint[2] proof) ... */
    tag_98:
        /* "DKG.sol":15459:15463  bool */
      0x0
        /* "DKG.sol":15479:15498  uint256[2] memory a */
      tag_334
      jump	// in(tag_161)
    tag_334:
        /* "DKG.sol":15547:15566  uint256[2] memory b */
      tag_335
      jump	// in(tag_161)
    tag_335:
        /* "DKG.sol":15635:15654  uint256[2] memory t */
      tag_336
      jump	// in(tag_161)
    tag_336:
        /* "DKG.sol":15711:15720  uint256 c */
      0x0
        /* "DKG.sol":15501:15537  bn128_multiply([g1x, g1y, proof[1]]) */
      tag_338
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":15501:15537  bn128_multiply([g1x, g1y, proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":15501:15537  bn128_multiply([g1x, g1y, proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15527:15532  proof */
      dup9
        /* "DKG.sol":15533:15534  1 */
      0x1
        /* "DKG.sol":15527:15535  proof[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_339
      jumpi
      invalid
    tag_339:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15501:15537  bn128_multiply([g1x, g1y, proof[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":15501:15515  bn128_multiply */
      tag_92
        /* "DKG.sol":15501:15537  bn128_multiply([g1x, g1y, proof[1]]) */
      jump	// in
    tag_338:
        /* "DKG.sol":15479:15537  uint256[2] memory a = bn128_multiply([g1x, g1y, proof[1]]) */
      swap4
      pop
        /* "DKG.sol":15569:15625  bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      tag_340
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":15585:15595  public_key */
      dup10
        /* "DKG.sol":15596:15597  0 */
      0x0
        /* "DKG.sol":15585:15598  public_key[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_341
      jumpi
      invalid
    tag_341:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15569:15625  bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15600:15610  public_key */
      dup10
        /* "DKG.sol":15611:15612  1 */
      0x1
        /* "DKG.sol":15600:15613  public_key[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_342
      jumpi
      invalid
    tag_342:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15569:15625  bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15615:15620  proof */
      dup9
        /* "DKG.sol":15621:15622  0 */
      0x0
        /* "DKG.sol":15615:15623  proof[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_343
      jumpi
      invalid
    tag_343:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15569:15625  bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":15569:15583  bn128_multiply */
      tag_92
        /* "DKG.sol":15569:15625  bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      jump	// in
    tag_340:
        /* "DKG.sol":15547:15625  uint256[2] memory b = bn128_multiply([public_key[0], public_key[1], proof[0]]) */
      swap3
      pop
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      tag_344
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":15668:15669  a */
      dup7
        /* "DKG.sol":15670:15671  0 */
      0x0
        /* "DKG.sol":15668:15672  a[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_345
      jumpi
      invalid
    tag_345:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15674:15675  a */
      dup7
        /* "DKG.sol":15676:15677  1 */
      0x1
        /* "DKG.sol":15674:15678  a[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_346
      jumpi
      invalid
    tag_346:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15680:15681  b */
      dup6
        /* "DKG.sol":15682:15683  0 */
      0x0
        /* "DKG.sol":15680:15684  b[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_347
      jumpi
      invalid
    tag_347:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":15686:15687  b */
      dup6
        /* "DKG.sol":15688:15689  1 */
      0x1
        /* "DKG.sol":15686:15690  b[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_348
      jumpi
      invalid
    tag_348:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":15657:15666  bn128_add */
      tag_128
        /* "DKG.sol":15657:15692  bn128_add([a[0], a[1], b[0], b[1]]) */
      jump	// in
    tag_344:
        /* "DKG.sol":15635:15692  uint256[2] memory t = bn128_add([a[0], a[1], b[0], b[1]]) */
      swap2
      pop
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":15781:15791  public_key */
      dup9
        /* "DKG.sol":15792:15793  0 */
      0x0
        /* "DKG.sol":15781:15794  public_key[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_349
      jumpi
      invalid
    tag_349:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15796:15806  public_key */
      dup10
        /* "DKG.sol":15807:15808  1 */
      0x1
        /* "DKG.sol":15796:15809  public_key[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_350
      jumpi
      invalid
    tag_350:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15811:15812  t */
      dup6
        /* "DKG.sol":15813:15814  0 */
      0x0
        /* "DKG.sol":15811:15815  t[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_351
      jumpi
      invalid
    tag_351:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15817:15818  t */
      dup7
        /* "DKG.sol":15819:15820  1 */
      0x1
        /* "DKG.sol":15817:15821  t[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_352
      jumpi
      invalid
    tag_352:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15823:15833  msg.sender */
      caller
        /* "DKG.sol":15754:15834  abi.encodePacked(g1x, g1y, public_key[0], public_key[1], t[0], t[1], msg.sender) */
      add(0x20, mload(0x40))
      dup1
      dup9
      dup2
      mstore
      0x20
      add
      dup8
      dup2
      mstore
      0x20
      add
      dup7
      dup2
      mstore
      0x20
      add
      dup6
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x1000000000000000000000000
      mul
      dup2
      mstore
      0x14
      add
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":15754:15834  abi.encodePacked(g1x, g1y, public_key[0], public_key[1], t[0], t[1], msg.sender) */
      swap1
      0x40
      mstore
        /* "DKG.sol":15744:15835  keccak256(abi.encodePacked(g1x, g1y, public_key[0], public_key[1], t[0], t[1], msg.sender)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_353:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_354
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_353)
    tag_354:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":15744:15835  keccak256(abi.encodePacked(g1x, g1y, public_key[0], public_key[1], t[0], t[1], msg.sender)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":15723:15836  uint256(... */
      0x1
      swap1
      div
        /* "DKG.sol":15711:15836  uint256 c = uint256(... */
      swap1
      pop
        /* "DKG.sol":15866:15867  c */
      dup1
        /* "DKG.sol":15854:15859  proof */
      dup7
        /* "DKG.sol":15860:15861  0 */
      0x0
        /* "DKG.sol":15854:15862  proof[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_356
      jumpi
      invalid
    tag_356:
      0x20
      mul
      add
      mload
        /* "DKG.sol":15854:15867  proof[0] == c */
      eq
        /* "DKG.sol":15847:15867  return proof[0] == c */
      swap5
      pop
        /* "DKG.sol":15374:15874  function verify_sk_knowledge(uint[2] public_key, uint[2] proof) ... */
      pop
      pop
      pop
      pop
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "DKG.sol":3355:3495  function registrations_confirmed() ... */
    tag_101:
        /* "DKG.sol":3415:3419  bool */
      0x0
        /* "DKG.sol":3476:3488  block.number */
      number
        /* "DKG.sol":1400:1401  2 */
      0x2
        /* "DKG.sol":3438:3456  T_REGISTRATION_END */
      sload(0x8)
        /* "DKG.sol":3438:3472  T_REGISTRATION_END + DELTA_CONFIRM */
      add
        /* "DKG.sol":3438:3488  T_REGISTRATION_END + DELTA_CONFIRM <= block.number */
      gt
      iszero
        /* "DKG.sol":3431:3488  return T_REGISTRATION_END + DELTA_CONFIRM <= block.number */
      swap1
      pop
        /* "DKG.sol":3355:3495  function registrations_confirmed() ... */
      swap1
      jump	// out
        /* "DKG.sol":15978:17144  function verify_decryption_key(... */
    tag_104:
        /* "DKG.sol":16204:16218  bool key_valid */
      0x0
        /* "DKG.sol":16345:16367  uint256[2] memory tmp1 */
      tag_358
      jump	// in(tag_161)
    tag_358:
        /* "DKG.sol":16405:16427  uint256[2] memory tmp2 */
      tag_359
      jump	// in(tag_161)
    tag_359:
        /* "DKG.sol":16590:16610  uint256[2] memory a1 */
      tag_360
      jump	// in(tag_161)
    tag_360:
        /* "DKG.sol":16855:16875  uint256[2] memory a2 */
      tag_361
      jump	// in(tag_161)
    tag_361:
        /* "DKG.sol":16936:16962  uint256 challenge_computed */
      0x0
        /* "DKG.sol":16445:16493  bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      tag_363
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":16445:16493  bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":16445:16493  bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16471:16488  correctness_proof */
      dup12
        /* "DKG.sol":16489:16490  1 */
      0x1
        /* "DKG.sol":16471:16491  correctness_proof[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_364
      jumpi
      invalid
    tag_364:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16445:16493  bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16445:16459  bn128_multiply */
      tag_92
        /* "DKG.sol":16445:16493  bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      jump	// in
    tag_363:
        /* "DKG.sol":16438:16493  tmp1 = bn128_multiply([g1x, g1y, correctness_proof[1]]) */
      swap5
      pop
        /* "DKG.sol":16510:16580  bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      tag_365
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":16526:16537  verifier_pk */
      dup11
        /* "DKG.sol":16538:16539  0 */
      0x0
        /* "DKG.sol":16526:16540  verifier_pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_366
      jumpi
      invalid
    tag_366:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16510:16580  bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16542:16553  verifier_pk */
      dup11
        /* "DKG.sol":16554:16555  1 */
      0x1
        /* "DKG.sol":16542:16556  verifier_pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_367
      jumpi
      invalid
    tag_367:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16510:16580  bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16558:16575  correctness_proof */
      dup12
        /* "DKG.sol":16576:16577  0 */
      0x0
        /* "DKG.sol":16558:16578  correctness_proof[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_368
      jumpi
      invalid
    tag_368:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16510:16580  bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16510:16524  bn128_multiply */
      tag_92
        /* "DKG.sol":16510:16580  bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      jump	// in
    tag_365:
        /* "DKG.sol":16503:16580  tmp2 = bn128_multiply([verifier_pk[0], verifier_pk[1], correctness_proof[0]]) */
      swap4
      pop
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      tag_369
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":16624:16628  tmp1 */
      dup8
        /* "DKG.sol":16629:16630  0 */
      0x0
        /* "DKG.sol":16624:16631  tmp1[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_370
      jumpi
      invalid
    tag_370:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16633:16637  tmp1 */
      dup8
        /* "DKG.sol":16638:16639  1 */
      0x1
        /* "DKG.sol":16633:16640  tmp1[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_371
      jumpi
      invalid
    tag_371:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16642:16646  tmp2 */
      dup7
        /* "DKG.sol":16647:16648  0 */
      0x0
        /* "DKG.sol":16642:16649  tmp2[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_372
      jumpi
      invalid
    tag_372:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16651:16655  tmp2 */
      dup7
        /* "DKG.sol":16656:16657  1 */
      0x1
        /* "DKG.sol":16651:16658  tmp2[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_373
      jumpi
      invalid
    tag_373:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16613:16622  bn128_add */
      tag_128
        /* "DKG.sol":16613:16660  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      jump	// in
    tag_369:
        /* "DKG.sol":16590:16660  uint256[2] memory a1 = bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      swap3
      pop
        /* "DKG.sol":16686:16752  bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      tag_374
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":16702:16711  issuer_pk */
      dup10
        /* "DKG.sol":16712:16713  0 */
      0x0
        /* "DKG.sol":16702:16714  issuer_pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_375
      jumpi
      invalid
    tag_375:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16686:16752  bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16716:16725  issuer_pk */
      dup10
        /* "DKG.sol":16726:16727  1 */
      0x1
        /* "DKG.sol":16716:16728  issuer_pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_376
      jumpi
      invalid
    tag_376:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16686:16752  bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16730:16747  correctness_proof */
      dup12
        /* "DKG.sol":16748:16749  1 */
      0x1
        /* "DKG.sol":16730:16750  correctness_proof[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_377
      jumpi
      invalid
    tag_377:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16686:16752  bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16686:16700  bn128_multiply */
      tag_92
        /* "DKG.sol":16686:16752  bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      jump	// in
    tag_374:
        /* "DKG.sol":16679:16752  tmp1 = bn128_multiply([issuer_pk[0], issuer_pk[1], correctness_proof[1]]) */
      swap5
      pop
        /* "DKG.sol":16769:16845  bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      tag_378
      0x60
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":16785:16799  decryption_key */
      dup13
        /* "DKG.sol":16800:16801  0 */
      0x0
        /* "DKG.sol":16785:16802  decryption_key[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_379
      jumpi
      invalid
    tag_379:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16769:16845  bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16804:16818  decryption_key */
      dup13
        /* "DKG.sol":16819:16820  1 */
      0x1
        /* "DKG.sol":16804:16821  decryption_key[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_380
      jumpi
      invalid
    tag_380:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16769:16845  bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16823:16840  correctness_proof */
      dup12
        /* "DKG.sol":16841:16842  0 */
      0x0
        /* "DKG.sol":16823:16843  correctness_proof[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_381
      jumpi
      invalid
    tag_381:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16769:16845  bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16769:16783  bn128_multiply */
      tag_92
        /* "DKG.sol":16769:16845  bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      jump	// in
    tag_378:
        /* "DKG.sol":16762:16845  tmp2 = bn128_multiply([decryption_key[0], decryption_key[1], correctness_proof[0]]) */
      swap4
      pop
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      tag_382
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":16889:16893  tmp1 */
      dup8
        /* "DKG.sol":16894:16895  0 */
      0x0
        /* "DKG.sol":16889:16896  tmp1[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_383
      jumpi
      invalid
    tag_383:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16898:16902  tmp1 */
      dup8
        /* "DKG.sol":16903:16904  1 */
      0x1
        /* "DKG.sol":16898:16905  tmp1[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_384
      jumpi
      invalid
    tag_384:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16907:16911  tmp2 */
      dup7
        /* "DKG.sol":16912:16913  0 */
      0x0
        /* "DKG.sol":16907:16914  tmp2[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_385
      jumpi
      invalid
    tag_385:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":16916:16920  tmp2 */
      dup7
        /* "DKG.sol":16921:16922  1 */
      0x1
        /* "DKG.sol":16916:16923  tmp2[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_386
      jumpi
      invalid
    tag_386:
      0x20
      mul
      add
      mload
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":16878:16887  bn128_add */
      tag_128
        /* "DKG.sol":16878:16925  bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      jump	// in
    tag_382:
        /* "DKG.sol":16855:16925  uint256[2] memory a2 = bn128_add([tmp1[0], tmp1[1], tmp2[0], tmp2[1]]) */
      swap2
      pop
        /* "DKG.sol":17013:17015  a1 */
      dup3
        /* "DKG.sol":17017:17019  a2 */
      dup3
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":17031:17042  verifier_pk */
      dup12
        /* "DKG.sol":17044:17053  issuer_pk */
      dup12
        /* "DKG.sol":17055:17069  decryption_key */
      dup16
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      add(0x20, mload(0x40))
      dup1
      dup9
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_387:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_388
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_387)
    tag_388:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup8
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_390:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_391
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_390)
    tag_391:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup7
      dup2
      mstore
      0x20
      add
      dup6
      dup2
      mstore
      0x20
      add
      dup5
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_393:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_394
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_393)
    tag_394:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup4
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_396:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_397
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_396)
    tag_397:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      mul(0x20, 0x2)
      dup1
      dup4
      dup4
        /* "--CODEGEN--":23:24   */
      0x0
        /* "--CODEGEN--":8:108   */
    tag_399:
        /* "--CODEGEN--":33:36   */
      dup4
        /* "--CODEGEN--":30:31   */
      dup2
        /* "--CODEGEN--":27:37   */
      lt
        /* "--CODEGEN--":8:108   */
      iszero
      tag_400
      jumpi
        /* "--CODEGEN--":99:100   */
      dup1
        /* "--CODEGEN--":94:97   */
      dup3
        /* "--CODEGEN--":90:101   */
      add
        /* "--CODEGEN--":84:102   */
      mload
        /* "--CODEGEN--":80:81   */
      dup2
        /* "--CODEGEN--":75:78   */
      dup5
        /* "--CODEGEN--":71:82   */
      add
        /* "--CODEGEN--":64:103   */
      mstore
        /* "--CODEGEN--":52:54   */
      0x20
        /* "--CODEGEN--":49:50   */
      dup2
        /* "--CODEGEN--":45:55   */
      add
        /* "--CODEGEN--":40:55   */
      swap1
      pop
        /* "--CODEGEN--":8:108   */
      jump(tag_399)
    tag_400:
        /* "--CODEGEN--":12:26   */
      pop
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":16996:17070  abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key) */
      swap1
      0x40
      mstore
        /* "DKG.sol":16986:17071  keccak256(abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_402:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_403
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_402)
    tag_403:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":16986:17071  keccak256(abi.encodePacked(a1, a2, g1x, g1y, verifier_pk, issuer_pk, decryption_key)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":16965:17072  uint256(... */
      0x1
      swap1
      div
        /* "DKG.sol":16936:17072  uint256 challenge_computed = uint256(... */
      swap1
      pop
        /* "DKG.sol":17119:17137  challenge_computed */
      dup1
        /* "DKG.sol":17095:17112  correctness_proof */
      dup10
        /* "DKG.sol":17113:17114  0 */
      0x0
        /* "DKG.sol":17095:17115  correctness_proof[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_405
      jumpi
      invalid
    tag_405:
      0x20
      mul
      add
      mload
        /* "DKG.sol":17095:17137  correctness_proof[0] == challenge_computed */
      eq
        /* "DKG.sol":17083:17137  key_valid = correctness_proof[0] == challenge_computed */
      swap6
      pop
        /* "DKG.sol":15978:17144  function verify_decryption_key(... */
      pop
      pop
      pop
      pop
      pop
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "DKG.sol":3501:3629  function sharing_confirmed()... */
    tag_107:
        /* "DKG.sol":3554:3558  bool */
      0x0
        /* "DKG.sol":3610:3622  block.number */
      number
        /* "DKG.sol":1400:1401  2 */
      0x2
        /* "DKG.sol":3577:3590  T_SHARING_END */
      sload(0x9)
        /* "DKG.sol":3577:3606  T_SHARING_END + DELTA_CONFIRM */
      add
        /* "DKG.sol":3577:3622  T_SHARING_END + DELTA_CONFIRM <= block.number */
      gt
      iszero
        /* "DKG.sol":3570:3622  return T_SHARING_END + DELTA_CONFIRM <= block.number */
      swap1
      pop
        /* "DKG.sol":3501:3629  function sharing_confirmed()... */
      swap1
      jump	// out
        /* "DKG.sol":20026:20662  function bn128_check_pairing(uint256[12] input) ... */
    tag_110:
        /* "DKG.sol":20095:20099  bool */
      0x0
        /* "DKG.sol":20111:20135  uint256[1] memory result */
      tag_407
      jump	// in(tag_408)
    tag_407:
        /* "DKG.sol":20145:20157  bool success */
      0x0
        /* "DKG.sol":20553:20555  32 */
      0x20
        /* "DKG.sol":20545:20551  result */
      dup3
        /* "DKG.sol":20540:20543  384 */
      0x180
        /* "DKG.sol":20533:20538  input */
      dup7
        /* "DKG.sol":20530:20531  0 */
      0x0
        /* "DKG.sol":20524:20528  0x08 */
      0x8
        /* "DKG.sol":20517:20521  2000 */
      0x7d0
        /* "DKG.sol":20512:20515  gas */
      gas
        /* "DKG.sol":20508:20522  sub(gas, 2000) */
      sub
        /* "DKG.sol":20503:20556  call(sub(gas, 2000), 0x08, 0, input, 384, result, 32) */
      call
        /* "DKG.sol":20492:20556  success := call(sub(gas, 2000), 0x08, 0, input, 384, result, 32) */
      swap1
      pop
        /* "DKG.sol":20583:20590  success */
      dup1
        /* "DKG.sol":20575:20624  require(success, "elliptic curve pairing failed") */
      iszero
      iszero
      tag_410
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1d
      dup2
      mstore
      0x20
      add
      dup1
      0x656c6c69707469632063757276652070616972696e67206661696c6564000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_410:
        /* "DKG.sol":20654:20655  1 */
      0x1
        /* "DKG.sol":20641:20647  result */
      dup3
        /* "DKG.sol":20648:20649  0 */
      0x0
        /* "DKG.sol":20641:20650  result[0] */
      0x1
      dup2
      lt
      iszero
      iszero
      tag_411
      jumpi
      invalid
    tag_411:
      0x20
      mul
      add
      mload
        /* "DKG.sol":20641:20655  result[0] == 1 */
      eq
        /* "DKG.sol":20634:20655  return result[0] == 1 */
      swap3
      pop
        /* "DKG.sol":20026:20662  function bn128_check_pairing(uint256[12] input) ... */
      pop
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":11369:13388  function upload_group_key(uint[4] _bls_group_pk) ... */
    tag_113:
        /* "DKG.sol":11438:11450  bool success */
      0x0
        /* "DKG.sol":11644:11653  uint256 n */
      dup1
        /* "DKG.sol":11693:11702  uint256 t */
      0x0
        /* "DKG.sol":11735:11751  Node memory node */
      tag_412
      jump	// in(tag_269)
    tag_412:
        /* "DKG.sol":11761:11787  uint256[2] memory group_pk */
      tag_413
      jump	// in(tag_161)
    tag_413:
        /* "DKG.sol":11870:11879  uint256 i */
      0x0
        /* "DKG.sol":12230:12239  uint256 p */
      dup1
        /* "DKG.sol":11487:11510  in_finalization_phase() */
      tag_415
        /* "DKG.sol":11487:11508  in_finalization_phase */
      tag_51
        /* "DKG.sol":11487:11510  in_finalization_phase() */
      jump	// in
    tag_415:
        /* "DKG.sol":11466:11633  require(... */
      iszero
      iszero
      tag_416
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x5d
      dup2
      mstore
      0x20
      add
      dup1
      0x67726f7570206b65792075706c6f6164206661696c656420286b657920736861
      dup2
      mstore
      0x20
      add
      0x72696e67202f206469737075746573206e6f742066696e7369736865642c206f
      dup2
      mstore
      0x20
      add
      0x722067726f7570206b657920616c72656164792075706c6f6164656429000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_416:
        /* "DKG.sol":11656:11676  registered_addresses */
      0x4
        /* "DKG.sol":11656:11683  registered_addresses.length */
      dup1
      sload
      swap1
      pop
        /* "DKG.sol":11644:11683  uint256 n = registered_addresses.length */
      swap6
      pop
        /* "DKG.sol":11715:11716  1 */
      0x1
        /* "DKG.sol":11710:11711  2 */
      0x2
        /* "DKG.sol":11706:11707  n */
      dup8
        /* "DKG.sol":11706:11711  n / 2 */
      dup2
      iszero
      iszero
      tag_417
      jumpi
      invalid
    tag_417:
      div
        /* "DKG.sol":11705:11716  (n / 2) + 1 */
      add
        /* "DKG.sol":11693:11716  uint256 t = (n / 2) + 1 */
      swap5
      pop
        /* "DKG.sol":11882:11883  0 */
      0x0
        /* "DKG.sol":11870:11883  uint256 i = 0 */
      swap2
      pop
        /* "DKG.sol":11893:12054  do {... */
    tag_418:
        /* "DKG.sol":11917:11922  nodes */
      0x5
        /* "DKG.sol":11917:11947  nodes[registered_addresses[i]] */
      0x0
        /* "DKG.sol":11923:11943  registered_addresses */
      0x4
        /* "DKG.sol":11944:11945  i */
      dup5
        /* "DKG.sol":11923:11946  registered_addresses[i] */
      dup2
      sload
      dup2
      lt
      iszero
      iszero
      tag_420
      jumpi
      invalid
    tag_420:
      swap1
      0x0
      mstore
      keccak256(0x0, 0x20)
      add
      0x0
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "DKG.sol":11917:11947  nodes[registered_addresses[i]] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":11910:11947  node = nodes[registered_addresses[i]] */
      0xa0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      swap1
      dup2
      0x0
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x1
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x2
      dup3
      add
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x2
      dup1
      iszero
      tag_422
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_423:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_423
      jumpi
    tag_422:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x4
      dup3
      add
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x4
      dup1
      iszero
      tag_424
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_425:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_425
      jumpi
    tag_424:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x8
      dup3
      add
      sload
      not(0x0)
      and
      not(0x0)
      and
      dup2
      mstore
      pop
      pop
      swap4
      pop
        /* "DKG.sol":11966:11967  1 */
      0x1
        /* "DKG.sol":11961:11967  i += 1 */
      dup3
      add
      swap2
      pop
        /* "DKG.sol":12006:12007  0 */
      0x0
        /* "DKG.sol":11995:11999  node */
      dup5
        /* "DKG.sol":11995:12002  node.id */
      0x0
      add
      mload
        /* "DKG.sol":11995:12007  node.id == 0 */
      eq
        /* "DKG.sol":11995:12042  node.id == 0 || node.key_distribution_hash == 0 */
      dup1
      tag_426
      jumpi
      pop
        /* "DKG.sol":12041:12042  0 */
      0x0
        /* "DKG.sol":12011:12042  node.key_distribution_hash == 0 */
      0x1
      mul
        /* "DKG.sol":12011:12015  node */
      dup5
        /* "DKG.sol":12011:12037  node.key_distribution_hash */
      0x80
      add
      mload
        /* "DKG.sol":12011:12042  node.key_distribution_hash == 0 */
      not(0x0)
      and
      eq
        /* "DKG.sol":11995:12042  node.id == 0 || node.key_distribution_hash == 0 */
    tag_426:
        /* "DKG.sol":11994:12052  (node.id == 0 || node.key_distribution_hash == 0) && i < n */
      dup1
      iszero
      tag_427
      jumpi
      pop
        /* "DKG.sol":12051:12052  n */
      dup6
        /* "DKG.sol":12047:12048  i */
      dup3
        /* "DKG.sol":12047:12052  i < n */
      lt
        /* "DKG.sol":11994:12052  (node.id == 0 || node.key_distribution_hash == 0) && i < n */
    tag_427:
        /* "DKG.sol":11893:12054  do {... */
      iszero
      tag_419
      jumpi
      jump(tag_418)
    tag_419:
        /* "DKG.sol":12073:12074  n */
      dup6
        /* "DKG.sol":12068:12069  i */
      dup3
        /* "DKG.sol":12068:12074  i == n */
      eq
        /* "DKG.sol":12064:12212  if (i == n) {... */
      iszero
      tag_428
      jumpi
        /* "DKG.sol":12164:12175  __abort__() */
      tag_429
        /* "DKG.sol":12164:12173  __abort__ */
      tag_276
        /* "DKG.sol":12164:12175  __abort__() */
      jump	// in
    tag_429:
        /* "DKG.sol":12196:12201  false */
      0x0
        /* "DKG.sol":12189:12201  return false */
      swap7
      pop
      jump(tag_414)
        /* "DKG.sol":12064:12212  if (i == n) {... */
    tag_428:
        /* "DKG.sol":12242:12243  1 */
      0x1
        /* "DKG.sol":12230:12243  uint256 p = 1 */
      swap1
      pop
        /* "DKG.sol":12310:12314  node */
      dup4
        /* "DKG.sol":12310:12317  node.pk */
      0x40
      add
      mload
        /* "DKG.sol":12299:12317  group_pk = node.pk */
      swap3
      pop
        /* "DKG.sol":12327:12659  for ( ; i < registered_addresses.length; i++) {  // sum up all valid pubic keys... */
    tag_430:
        /* "DKG.sol":12339:12359  registered_addresses */
      0x4
        /* "DKG.sol":12339:12366  registered_addresses.length */
      dup1
      sload
      swap1
      pop
        /* "DKG.sol":12335:12336  i */
      dup3
        /* "DKG.sol":12335:12366  i < registered_addresses.length */
      lt
        /* "DKG.sol":12327:12659  for ( ; i < registered_addresses.length; i++) {  // sum up all valid pubic keys... */
      iszero
      tag_431
      jumpi
        /* "DKG.sol":12426:12431  nodes */
      0x5
        /* "DKG.sol":12426:12456  nodes[registered_addresses[i]] */
      0x0
        /* "DKG.sol":12432:12452  registered_addresses */
      0x4
        /* "DKG.sol":12453:12454  i */
      dup5
        /* "DKG.sol":12432:12455  registered_addresses[i] */
      dup2
      sload
      dup2
      lt
      iszero
      iszero
      tag_433
      jumpi
      invalid
    tag_433:
      swap1
      0x0
      mstore
      keccak256(0x0, 0x20)
      add
      0x0
      swap1
      sload
      swap1
      0x100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "DKG.sol":12426:12456  nodes[registered_addresses[i]] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":12419:12456  node = nodes[registered_addresses[i]] */
      0xa0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      swap1
      dup2
      0x0
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x1
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x2
      dup3
      add
      0x2
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x2
      dup1
      iszero
      tag_435
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_436:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_436
      jumpi
    tag_435:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x4
      dup3
      add
      0x4
      dup1
      0x20
      mul
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      swap3
      swap2
      swap1
      dup3
      0x4
      dup1
      iszero
      tag_437
      jumpi
      0x20
      mul
      dup3
      add
      swap2
    tag_438:
      dup2
      sload
      dup2
      mstore
      0x20
      add
      swap1
      0x1
      add
      swap1
      dup1
      dup4
      gt
      tag_438
      jumpi
    tag_437:
      pop
      pop
      pop
      pop
      pop
      dup2
      mstore
      0x20
      add
      0x8
      dup3
      add
      sload
      not(0x0)
      and
      not(0x0)
      and
      dup2
      mstore
      pop
      pop
      swap4
      pop
        /* "DKG.sol":12485:12486  0 */
      0x0
        /* "DKG.sol":12474:12478  node */
      dup5
        /* "DKG.sol":12474:12481  node.id */
      0x0
      add
      mload
        /* "DKG.sol":12474:12486  node.id != 0 */
      eq
      iszero
        /* "DKG.sol":12474:12521  node.id != 0 && node.key_distribution_hash != 0 */
      dup1
      iszero
      tag_439
      jumpi
      pop
        /* "DKG.sol":12520:12521  0 */
      0x0
        /* "DKG.sol":12490:12521  node.key_distribution_hash != 0 */
      0x1
      mul
        /* "DKG.sol":12490:12494  node */
      dup5
        /* "DKG.sol":12490:12516  node.key_distribution_hash */
      0x80
      add
      mload
        /* "DKG.sol":12490:12521  node.key_distribution_hash != 0 */
      not(0x0)
      and
      eq
      iszero
        /* "DKG.sol":12474:12521  node.id != 0 && node.key_distribution_hash != 0 */
    tag_439:
        /* "DKG.sol":12470:12649  if (node.id != 0 && node.key_distribution_hash != 0) {... */
      iszero
      tag_440
      jumpi
        /* "DKG.sol":12541:12544  p++ */
      dup1
      dup1
      0x1
      add
      swap2
      pop
      pop
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      tag_441
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":12584:12592  group_pk */
      dup6
        /* "DKG.sol":12593:12594  0 */
      0x0
        /* "DKG.sol":12584:12595  group_pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_442
      jumpi
      invalid
    tag_442:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":12597:12605  group_pk */
      dup6
        /* "DKG.sol":12606:12607  1 */
      0x1
        /* "DKG.sol":12597:12608  group_pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_443
      jumpi
      invalid
    tag_443:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":12610:12614  node */
      dup7
        /* "DKG.sol":12610:12617  node.pk */
      0x40
      add
      mload
        /* "DKG.sol":12618:12619  0 */
      0x0
        /* "DKG.sol":12610:12620  node.pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_444
      jumpi
      invalid
    tag_444:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":12622:12626  node */
      dup7
        /* "DKG.sol":12622:12629  node.pk */
      0x40
      add
      mload
        /* "DKG.sol":12630:12631  1 */
      0x1
        /* "DKG.sol":12622:12632  node.pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_445
      jumpi
      invalid
    tag_445:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      dup2
      mstore
      pop
        /* "DKG.sol":12573:12582  bn128_add */
      tag_128
        /* "DKG.sol":12573:12634  bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      jump	// in
    tag_441:
        /* "DKG.sol":12562:12634  group_pk = bn128_add([group_pk[0], group_pk[1], node.pk[0], node.pk[1]]) */
      swap3
      pop
        /* "DKG.sol":12470:12649  if (node.id != 0 && node.key_distribution_hash != 0) {... */
    tag_440:
        /* "DKG.sol":12368:12371  i++ */
      dup2
      dup1
      0x1
      add
      swap3
      pop
      pop
        /* "DKG.sol":12327:12659  for ( ; i < registered_addresses.length; i++) {  // sum up all valid pubic keys... */
      jump(tag_430)
    tag_431:
        /* "DKG.sol":12677:12678  t */
      dup5
        /* "DKG.sol":12673:12674  p */
      dup2
        /* "DKG.sol":12673:12678  p < t */
      lt
        /* "DKG.sol":12669:12742  if (p < t) {... */
      iszero
      tag_446
      jumpi
        /* "DKG.sol":12694:12705  __abort__() */
      tag_447
        /* "DKG.sol":12694:12703  __abort__ */
      tag_276
        /* "DKG.sol":12694:12705  __abort__() */
      jump	// in
    tag_447:
        /* "DKG.sol":12726:12731  false */
      0x0
        /* "DKG.sol":12719:12731  return false */
      swap7
      pop
      jump(tag_414)
        /* "DKG.sol":12669:12742  if (p < t) {... */
    tag_446:
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      tag_448
      0x180
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":12976:12984  group_pk */
      dup6
        /* "DKG.sol":12985:12986  0 */
      0x0
        /* "DKG.sol":12976:12987  group_pk[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_449
      jumpi
      invalid
    tag_449:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":12989:12997  group_pk */
      dup6
        /* "DKG.sol":12998:12999  1 */
      0x1
        /* "DKG.sol":12989:13000  group_pk[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_450
      jumpi
      invalid
    tag_450:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":364:441  11559732032986387107991004021392285783925812861821192530917403151452391805634 */
      0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":471:548  10857046999023057135944570762232829481370756359578518086990519993285655852781 */
      0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":578:654  4082367875863433681332203403145435568316851327593401208105741076214120093531 */
      0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":684:760  8495653923123431417604973247489272438418190587263600148770280649306958101930 */
      0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":13096:13109  _bls_group_pk */
      dup11
        /* "DKG.sol":13110:13111  0 */
      0x0
        /* "DKG.sol":13096:13112  _bls_group_pk[0] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_451
      jumpi
      invalid
    tag_451:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":13114:13127  _bls_group_pk */
      dup11
        /* "DKG.sol":13128:13129  1 */
      0x1
        /* "DKG.sol":13114:13130  _bls_group_pk[1] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_452
      jumpi
      invalid
    tag_452:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":13132:13145  _bls_group_pk */
      dup11
        /* "DKG.sol":13146:13147  2 */
      0x2
        /* "DKG.sol":13132:13148  _bls_group_pk[2] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_453
      jumpi
      invalid
    tag_453:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":13150:13163  _bls_group_pk */
      dup11
        /* "DKG.sol":13164:13165  3 */
      0x3
        /* "DKG.sol":13150:13166  _bls_group_pk[3] */
      0x4
      dup2
      lt
      iszero
      iszero
      tag_454
      jumpi
      invalid
    tag_454:
      0x20
      mul
      add
      mload
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      dup2
      mstore
      pop
        /* "DKG.sol":12858:12877  bn128_check_pairing */
      tag_110
        /* "DKG.sol":12858:13185  bn128_check_pairing(                                    ... */
      jump	// in
    tag_448:
        /* "DKG.sol":12837:13299  require(... */
      iszero
      iszero
      tag_455
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x57
      dup2
      mstore
      0x20
      add
      dup1
      0x75706c6f6164206f662067726f7570206b6579206661696c6564202874686520
      dup2
      mstore
      0x20
      add
      0x7375626d697474656420626c735f67726f75705f706b20646f6573206e6f7420
      dup2
      mstore
      0x20
      add
      0x636f72726573706f6e6420746f2067726f75705f706b29000000000000000000
      dup2
      mstore
      pop
      0x60
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_455:
        /* "DKG.sol":13325:13338  _bls_group_pk */
      dup8
        /* "DKG.sol":13310:13322  bls_group_pk */
      0x0
        /* "DKG.sol":13310:13338  bls_group_pk = _bls_group_pk */
      swap1
      0x4
      tag_456
      swap3
      swap2
      swap1
      jump	// in(tag_457)
    tag_456:
      pop
        /* "DKG.sol":13369:13381  block.number */
      number
        /* "DKG.sol":13348:13366  T_GROUP_KEY_UPLOAD */
      0xb
        /* "DKG.sol":13348:13381  T_GROUP_KEY_UPLOAD = block.number */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":11369:13388  function upload_group_key(uint[4] _bls_group_pk) ... */
    tag_414:
      pop
      pop
      pop
      pop
      pop
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":20669:21756  function bn128_map_to_G1(bytes32 data)... */
    tag_116:
        /* "DKG.sol":20728:20741  uint[2] point */
      tag_458
      jump	// in(tag_161)
    tag_458:
        /* "DKG.sol":20758:20769  uint256 ctr */
      0x0
        /* "DKG.sol":20810:20819  uint256 x */
      dup1
        /* "DKG.sol":20883:20889  bool b */
      0x0
        /* "DKG.sol":21175:21184  uint256 z */
      dup1
        /* "DKG.sol":21329:21338  uint256 y */
      0x0
        /* "DKG.sol":20772:20773  0 */
      dup1
        /* "DKG.sol":20758:20773  uint256 ctr = 0 */
      swap5
      pop
        /* "DKG.sol":20783:21746  while (true) {... */
    tag_460:
        /* "DKG.sol":20790:20794  true */
      0x1
        /* "DKG.sol":20783:21746  while (true) {... */
      iszero
      tag_461
      jumpi
        /* "DKG.sol":20857:20860  ctr */
      dup5
        /* "DKG.sol":20862:20866  data */
      dup8
        /* "DKG.sol":20840:20867  abi.encodePacked(ctr, data) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      not(0x0)
      and
      not(0x0)
      and
      dup2
      mstore
      0x20
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "DKG.sol":20840:20867  abi.encodePacked(ctr, data) */
      swap1
      0x40
      mstore
        /* "DKG.sol":20830:20868  keccak256(abi.encodePacked(ctr, data)) */
      mload(0x40)
      dup1
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_462:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":51:70   */
      iszero
        /* "--CODEGEN--":36:189   */
      iszero
      tag_463
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_462)
    tag_463:
        /* "--CODEGEN--":274:275   */
      0x1
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "DKG.sol":20830:20868  keccak256(abi.encodePacked(ctr, data)) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      keccak256
        /* "DKG.sol":20822:20869  uint256(keccak256(abi.encodePacked(ctr, data))) */
      0x1
      swap1
      div
        /* "DKG.sol":20810:20869  uint256 x = uint256(keccak256(abi.encodePacked(ctr, data))) */
      swap4
      pop
        /* "DKG.sol":20901:20902  1 */
      0x1
        /* "DKG.sol":20896:20897  1 */
      dup1
        /* "DKG.sol":20892:20893  x */
      dup6
        /* "DKG.sol":20892:20897  x & 1 */
      and
        /* "DKG.sol":20892:20902  x & 1 == 1 */
      eq
        /* "DKG.sol":20883:20902  bool b = x & 1 == 1 */
      swap3
      pop
        /* "DKG.sol":20957:20958  2 */
      0x2
        /* "DKG.sol":20951:20958  x >>= 2 */
      dup5
      swap1
      0x2
      exp
      swap1
      div
      swap4
      pop
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21058:21059  x */
      dup5
        /* "DKG.sol":21058:21075  x < FIELD_MODULUS */
      lt
        /* "DKG.sol":21054:21717  if (x < FIELD_MODULUS) { ... */
      iszero
      tag_465
      jumpi
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21235:21236  3 */
      0x3
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      tag_466
      0xc0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":21199:21201  32 */
      0x20
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21203:21205  32 */
      0x20
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21207:21209  32 */
      0x20
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21211:21212  x */
      dup9
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21214:21215  3 */
      0x3
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      dup2
      mstore
      pop
        /* "DKG.sol":21188:21197  bigModExp */
      tag_125
        /* "DKG.sol":21188:21232  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) */
      jump	// in
    tag_466:
        /* "DKG.sol":21188:21236  bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) + 3 */
      add
        /* "DKG.sol":21187:21253  (bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) + 3) % FIELD_MODULUS */
      dup2
      iszero
      iszero
      tag_467
      jumpi
      invalid
    tag_467:
      mod
        /* "DKG.sol":21175:21253  uint256 z = (bigModExp([32, 32, 32, x, 3, FIELD_MODULUS]) + 3) % FIELD_MODULUS */
      swap2
      pop
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      tag_468
      0xc0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":21352:21354  32 */
      0x20
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21356:21358  32 */
      0x20
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21360:21362  32 */
      0x20
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21364:21365  z */
      dup5
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21390:21391  2 */
      0x2
        /* "DKG.sol":21384:21385  1 */
      0x1
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21368:21385  FIELD_MODULUS + 1 */
      add
        /* "DKG.sol":21367:21391  (FIELD_MODULUS + 1) >> 2 */
      swap1
      0x2
      exp
      swap1
      div
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      dup2
      mstore
      pop
        /* "DKG.sol":21341:21350  bigModExp */
      tag_125
        /* "DKG.sol":21341:21408  bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      jump	// in
    tag_468:
        /* "DKG.sol":21329:21408  uint256 y = bigModExp([32, 32, 32, z, (FIELD_MODULUS + 1) >> 2, FIELD_MODULUS]) */
      swap1
      pop
        /* "DKG.sol":21545:21546  z */
      dup2
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      tag_469
      0xc0
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":21508:21510  32 */
      0x20
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21512:21514  32 */
      0x20
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21516:21518  32 */
      0x20
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21520:21521  y */
      dup5
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21523:21524  2 */
      0x2
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      dup2
      mstore
      pop
        /* "DKG.sol":21497:21506  bigModExp */
      tag_125
        /* "DKG.sol":21497:21541  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) */
      jump	// in
    tag_469:
        /* "DKG.sol":21497:21546  bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) == z */
      eq
        /* "DKG.sol":21493:21703  if (bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) == z) {... */
      iszero
      tag_470
      jumpi
        /* "DKG.sol":21574:21575  b */
      dup3
        /* "DKG.sol":21570:21649  if (b) {... */
      iszero
      tag_471
      jumpi
        /* "DKG.sol":21624:21625  y */
      dup1
        /* "DKG.sol":195:272  21888242871839275222246405745257275088696311157297823662689037894645226208583 */
      0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
        /* "DKG.sol":21608:21625  FIELD_MODULUS - y */
      sub
        /* "DKG.sol":21603:21626  y = (FIELD_MODULUS - y) */
      swap1
      pop
        /* "DKG.sol":21570:21649  if (b) {... */
    tag_471:
        /* "DKG.sol":21670:21683  return [x, y] */
      0x40
      dup1
      mload
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":21678:21679  x */
      dup6
        /* "DKG.sol":21670:21683  return [x, y] */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":21681:21682  y */
      dup3
        /* "DKG.sol":21670:21683  return [x, y] */
      dup2
      mstore
      pop
      swap6
      pop
      jump(tag_459)
        /* "DKG.sol":21493:21703  if (bigModExp([32, 32, 32, y, 2, FIELD_MODULUS]) == z) {... */
    tag_470:
        /* "DKG.sol":21054:21717  if (x < FIELD_MODULUS) { ... */
    tag_465:
        /* "DKG.sol":21730:21735  ctr++ */
      dup5
      dup1
      0x1
      add
      swap6
      pop
      pop
        /* "DKG.sol":20783:21746  while (true) {... */
      jump(tag_460)
    tag_461:
        /* "DKG.sol":20669:21756  function bn128_map_to_G1(bytes32 data)... */
    tag_459:
      pop
      pop
      pop
      pop
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":1970:1998  uint256 public T_DISPUTE_END */
    tag_122:
      sload(0xa)
      dup2
      jump	// out
        /* "DKG.sol":21767:22752  function bigModExp(uint256[6] input) ... */
    tag_125:
        /* "DKG.sol":21825:21832  uint256 */
      0x0
        /* "DKG.sol":22248:22260  bool success */
      dup1
        /* "DKG.sol":22270:22294  uint256[1] memory result */
      tag_472
      jump	// in(tag_408)
    tag_472:
        /* "DKG.sol":22651:22653  32 */
      0x20
        /* "DKG.sol":22643:22649  result */
      dup2
        /* "DKG.sol":22638:22641  192 */
      0xc0
        /* "DKG.sol":22631:22636  input */
      dup7
        /* "DKG.sol":22628:22629  0 */
      0x0
        /* "DKG.sol":22622:22626  0x05 */
      0x5
        /* "DKG.sol":22618:22619  0 */
      0x0
        /* "DKG.sol":22614:22620  not(0) */
      not
        /* "DKG.sol":22609:22654  call(not(0), 0x05, 0, input, 192, result, 32) */
      call
        /* "DKG.sol":22598:22654  success := call(not(0), 0x05, 0, input, 192, result, 32) */
      swap2
      pop
        /* "DKG.sol":22681:22688  success */
      dup2
        /* "DKG.sol":22673:22719  require(success, "bigModExp operation failed") */
      iszero
      iszero
      tag_474
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1a
      dup2
      mstore
      0x20
      add
      dup1
      0x6269674d6f64457870206f7065726174696f6e206661696c6564000000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_474:
        /* "DKG.sol":22736:22742  result */
      dup1
        /* "DKG.sol":22743:22744  0 */
      0x0
        /* "DKG.sol":22736:22745  result[0] */
      0x1
      dup2
      lt
      iszero
      iszero
      tag_475
      jumpi
      invalid
    tag_475:
      0x20
      mul
      add
      mload
        /* "DKG.sol":22729:22745  return result[0] */
      swap3
      pop
        /* "DKG.sol":21767:22752  function bigModExp(uint256[6] input) ... */
      pop
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":17780:18552  function bn128_add(uint256[4] input) ... */
    tag_128:
        /* "DKG.sol":17838:17855  uint256[2] result */
      tag_476
      jump	// in(tag_161)
    tag_476:
        /* "DKG.sol":18094:18106  bool success */
      0x0
        /* "DKG.sol":18473:18475  64 */
      0x40
        /* "DKG.sol":18465:18471  result */
      dup3
        /* "DKG.sol":18460:18463  128 */
      0x80
        /* "DKG.sol":18453:18458  input */
      dup6
        /* "DKG.sol":18450:18451  0 */
      0x0
        /* "DKG.sol":18444:18448  0x06 */
      0x6
        /* "DKG.sol":18440:18441  0 */
      0x0
        /* "DKG.sol":18436:18442  not(0) */
      not
        /* "DKG.sol":18431:18476  call(not(0), 0x06, 0, input, 128, result, 64) */
      call
        /* "DKG.sol":18420:18476  success := call(not(0), 0x06, 0, input, 128, result, 64) */
      swap1
      pop
        /* "DKG.sol":18503:18510  success */
      dup1
        /* "DKG.sol":18495:18545  require(success, "elliptic curve addition failed") */
      iszero
      iszero
      tag_478
      jumpi
      mload(0x40)
      0x8c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x4
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1e
      dup2
      mstore
      0x20
      add
      dup1
      0x656c6c6970746963206375727665206164646974696f6e206661696c65640000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_478:
        /* "DKG.sol":17780:18552  function bn128_add(uint256[4] input) ... */
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":1650:1684  uint256 public T_CONTRACT_CREATION */
    tag_134:
      sload(0x7)
      dup2
      jump	// out
        /* "DKG.sol":19346:20020  function bn128_is_on_curve(uint[2] point) ... */
    tag_137:
        /* "DKG.sol":19408:19418  bool valid */
      0x0
        /* "DKG.sol":19581:19604  uint256[4] memory input */
      tag_479
      jump	// in(tag_480)
    tag_479:
        /* "DKG.sol":19581:19637  uint256[4] memory input = [point[0], point[1], g1x, g1y] */
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
        /* "DKG.sol":19608:19613  point */
      dup5
        /* "DKG.sol":19614:19615  0 */
      0x0
        /* "DKG.sol":19608:19616  point[0] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_482
      jumpi
      invalid
    tag_482:
      0x20
      mul
      add
      mload
        /* "DKG.sol":19581:19637  uint256[4] memory input = [point[0], point[1], g1x, g1y] */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":19618:19623  point */
      dup5
        /* "DKG.sol":19624:19625  1 */
      0x1
        /* "DKG.sol":19618:19626  point[1] */
      0x2
      dup2
      lt
      iszero
      iszero
      tag_483
      jumpi
      invalid
    tag_483:
      0x20
      mul
      add
      mload
        /* "DKG.sol":19581:19637  uint256[4] memory input = [point[0], point[1], g1x, g1y] */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":302:303  1 */
      0x1
        /* "DKG.sol":19581:19637  uint256[4] memory input = [point[0], point[1], g1x, g1y] */
      dup2
      mstore
      0x20
      add
        /* "DKG.sol":332:333  2 */
      0x2
        /* "DKG.sol":19581:19637  uint256[4] memory input = [point[0], point[1], g1x, g1y] */
      dup2
      mstore
      pop
      swap1
      pop
        /* "DKG.sol":20001:20003  64 */
      0x40
        /* "DKG.sol":19994:19999  input */
      dup2
        /* "DKG.sol":19989:19992  128 */
      0x80
        /* "DKG.sol":19982:19987  input */
      dup4
        /* "DKG.sol":19979:19980  0 */
      0x0
        /* "DKG.sol":19973:19977  0x06 */
      0x6
        /* "DKG.sol":19969:19970  0 */
      0x0
        /* "DKG.sol":19965:19971  not(0) */
      not
        /* "DKG.sol":19960:20004  call(not(0), 0x06, 0, input, 128, input, 64) */
      call
        /* "DKG.sol":19951:20004  valid := call(not(0), 0x06, 0, input, 128, input, 64) */
      swap2
      pop
        /* "DKG.sol":19656:20014  {... */
      pop
      swap2
      swap1
      pop
      jump	// out
        /* "DKG.sol":13394:13518  function __slash__(address addr) ... */
    tag_224:
        /* "DKG.sol":13460:13483  DisputeSuccessful(addr) */
      0xca3f275f9f6197d1413355ca806679447a484c6932c50cd73388784825f5f534
        /* "DKG.sol":13478:13482  addr */
      dup2
        /* "DKG.sol":13460:13483  DisputeSuccessful(addr) */
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log1
        /* "DKG.sol":13510:13511  0 */
      0x0
        /* "DKG.sol":13493:13498  nodes */
      0x5
        /* "DKG.sol":13493:13504  nodes[addr] */
      0x0
        /* "DKG.sol":13499:13503  addr */
      dup4
        /* "DKG.sol":13493:13504  nodes[addr] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x0
      keccak256
        /* "DKG.sol":13493:13507  nodes[addr].id */
      0x0
      add
        /* "DKG.sol":13493:13511  nodes[addr].id = 0 */
      dup2
      swap1
      sstore
      pop
        /* "DKG.sol":13394:13518  function __slash__(address addr) ... */
      pop
      jump	// out
        /* "DKG.sol":15181:15267  function __abort__() ... */
    tag_276:
        /* "DKG.sol":15256:15260  true */
      0x1
        /* "DKG.sol":15246:15253  aborted */
      0x6
      0x0
        /* "DKG.sol":15246:15260  aborted = true */
      0x100
      exp
      dup2
      sload
      dup2
      0xff
      mul
      not
      and
      swap1
      dup4
      iszero
      iszero
      mul
      or
      swap1
      sstore
      pop
        /* "DKG.sol":15181:15267  function __abort__() ... */
      jump	// out
        /* "DKG.sol":26:22755  contract DKG {... */
    tag_161:
      0x40
      dup1
      mload
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x2
      swap1
        /* "--CODEGEN--":29:31   */
      0x20
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:32   */
      mul
        /* "--CODEGEN--":117:121   */
      dup1
        /* "--CODEGEN--":105:115   */
      codesize
        /* "--CODEGEN--":97:103   */
      dup4
        /* "--CODEGEN--":88:122   */
      codecopy
        /* "--CODEGEN--":148:152   */
      dup1
        /* "--CODEGEN--":140:146   */
      dup3
        /* "--CODEGEN--":136:153   */
      add
        /* "--CODEGEN--":126:153   */
      swap2
      pop
        /* "--CODEGEN--":0:157   */
      pop
        /* "DKG.sol":26:22755  contract DKG {... */
      swap1
      pop
      pop
      swap1
      jump	// out
    tag_269:
      0x120
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x0
      dup2
      mstore
      0x20
      add
      0x0
      dup2
      mstore
      0x20
      add
      tag_486
      jump	// in(tag_487)
    tag_486:
      dup2
      mstore
      0x20
      add
      tag_488
      jump	// in(tag_489)
    tag_488:
      dup2
      mstore
      0x20
      add
      0x0
      dup1
      not
      and
      dup2
      mstore
      pop
      swap1
      jump	// out
    tag_408:
      0x20
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x1
      swap1
        /* "--CODEGEN--":29:31   */
      0x20
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:32   */
      mul
        /* "--CODEGEN--":117:121   */
      dup1
        /* "--CODEGEN--":105:115   */
      codesize
        /* "--CODEGEN--":97:103   */
      dup4
        /* "--CODEGEN--":88:122   */
      codecopy
        /* "--CODEGEN--":148:152   */
      dup1
        /* "--CODEGEN--":140:146   */
      dup3
        /* "--CODEGEN--":136:153   */
      add
        /* "--CODEGEN--":126:153   */
      swap2
      pop
        /* "--CODEGEN--":0:157   */
      pop
        /* "DKG.sol":26:22755  contract DKG {... */
      swap1
      pop
      pop
      swap1
      jump	// out
    tag_457:
      dup3
      0x4
      dup2
      add
      swap3
      dup3
      iszero
      tag_490
      jumpi
      swap2
      0x20
      mul
      dup3
      add
    tag_491:
      dup3
      dup2
      gt
      iszero
      tag_492
      jumpi
      dup3
      mload
      dup3
      sstore
      swap2
      0x20
      add
      swap2
      swap1
      0x1
      add
      swap1
      jump(tag_491)
    tag_492:
    tag_490:
      pop
      swap1
      pop
      tag_493
      swap2
      swap1
      jump	// in(tag_494)
    tag_493:
      pop
      swap1
      jump	// out
    tag_480:
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x4
      swap1
        /* "--CODEGEN--":29:31   */
      0x20
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:32   */
      mul
        /* "--CODEGEN--":117:121   */
      dup1
        /* "--CODEGEN--":105:115   */
      codesize
        /* "--CODEGEN--":97:103   */
      dup4
        /* "--CODEGEN--":88:122   */
      codecopy
        /* "--CODEGEN--":148:152   */
      dup1
        /* "--CODEGEN--":140:146   */
      dup3
        /* "--CODEGEN--":136:153   */
      add
        /* "--CODEGEN--":126:153   */
      swap2
      pop
        /* "--CODEGEN--":0:157   */
      pop
        /* "DKG.sol":26:22755  contract DKG {... */
      swap1
      pop
      pop
      swap1
      jump	// out
    tag_487:
      0x40
      dup1
      mload
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x2
      swap1
        /* "--CODEGEN--":29:31   */
      0x20
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:32   */
      mul
        /* "--CODEGEN--":117:121   */
      dup1
        /* "--CODEGEN--":105:115   */
      codesize
        /* "--CODEGEN--":97:103   */
      dup4
        /* "--CODEGEN--":88:122   */
      codecopy
        /* "--CODEGEN--":148:152   */
      dup1
        /* "--CODEGEN--":140:146   */
      dup3
        /* "--CODEGEN--":136:153   */
      add
        /* "--CODEGEN--":126:153   */
      swap2
      pop
        /* "--CODEGEN--":0:157   */
      pop
        /* "DKG.sol":26:22755  contract DKG {... */
      swap1
      pop
      pop
      swap1
      jump	// out
    tag_489:
      0x80
      mload(0x40)
      swap1
      dup2
      add
      0x40
      mstore
      dup1
      0x4
      swap1
        /* "--CODEGEN--":29:31   */
      0x20
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:32   */
      mul
        /* "--CODEGEN--":117:121   */
      dup1
        /* "--CODEGEN--":105:115   */
      codesize
        /* "--CODEGEN--":97:103   */
      dup4
        /* "--CODEGEN--":88:122   */
      codecopy
        /* "--CODEGEN--":148:152   */
      dup1
        /* "--CODEGEN--":140:146   */
      dup3
        /* "--CODEGEN--":136:153   */
      add
        /* "--CODEGEN--":126:153   */
      swap2
      pop
        /* "--CODEGEN--":0:157   */
      pop
        /* "DKG.sol":26:22755  contract DKG {... */
      swap1
      pop
      pop
      swap1
      jump	// out
    tag_494:
      tag_495
      swap2
      swap1
    tag_496:
      dup1
      dup3
      gt
      iszero
      tag_497
      jumpi
      0x0
      dup2
      0x0
      swap1
      sstore
      pop
      0x1
      add
      jump(tag_496)
    tag_497:
      pop
      swap1
      jump
    tag_495:
      swap1
      jump	// out

    auxdata: 0xa165627a7a723058206a32a543c2fa89f33701e2b88a67e2dc8c0b01f3d820f6c561e178ff93d53e960029
}
